package de.sciss.numbers

import org.scalatest.flatspec.AnyFlatSpec

import scala.language.implicitConversions

class DoubleSpec extends AnyFlatSpec {
  import DoubleFunctions.{signum => sign, roundTo => round, roundUpTo => roundUp, hypotApx => hypotApx, _}
  import DoubleFunctions2._

  final val eps: Double = 1.0e-5
  final val inf: Double = Double.PositiveInfinity

  def is(res: Int, exp: Int): Unit =
    assert (res == exp)

  def is_tol(res: Double, exp: Double): Unit =
    assert (res >= exp - eps && res <= exp + eps)

  "Double.abs" should "work" in {
    is_tol(abs(  0.0),  0.0)
    is_tol(abs( 10.0), 10.0)
    is_tol(abs( 10.1), 10.1)
    is_tol(abs( 10.5), 10.5)
    is_tol(abs( 10.9), 10.9)
    is_tol(abs(-10.0), 10.0)
    is_tol(abs(-10.1), 10.1)
    is_tol(abs(-10.5), 10.5)
    is_tol(abs(-10.9), 10.9)
  }

  "Double.ceil" should "work" in {
    is_tol(ceil(  0.0),   0.0)
    is_tol(ceil( 10.0),  10.0)
    is_tol(ceil( 10.1),  11.0)
    is_tol(ceil( 10.5),  11.0)
    is_tol(ceil( 10.9),  11.0)
    is_tol(ceil(-10.0), -10.0)
    is_tol(ceil(-10.1), -10.0)
    is_tol(ceil(-10.5), -10.0)
    is_tol(ceil(-10.9), -10.0)
  }

  "Double.floor" should "work" in {
    is_tol(floor(  0.0),   0.0)
    is_tol(floor( 10.0),  10.0)
    is_tol(floor( 10.1),  10.0)
    is_tol(floor( 10.5),  10.0)
    is_tol(floor( 10.9),  10.0)
    is_tol(floor(-10.0), -10.0)
    is_tol(floor(-10.1), -11.0)
    is_tol(floor(-10.5), -11.0)
    is_tol(floor(-10.9), -11.0)
  }

  "Double.frac" should "work" in {
    is_tol(frac(  0.0), 0.0)
    is_tol(frac( 10.0), 0.0)
    is_tol(frac( 10.1), 0.1)
    is_tol(frac( 10.5), 0.5)
    is_tol(frac( 10.9), 0.9)
    is_tol(frac(-10.0), 0.0)
    is_tol(frac(-10.1), 0.9)
    is_tol(frac(-10.5), 0.5)
    is_tol(frac(-10.9), 0.1)
  }

  "Double.sign" should "work" in {
    is_tol(sign(  0.0),  0.0)
    is_tol(sign( 10.0),  1.0)
    is_tol(sign( 10.1),  1.0)
    is_tol(sign( 10.5),  1.0)
    is_tol(sign( 10.9),  1.0)
    is_tol(sign(-10.0), -1.0)
    is_tol(sign(-10.1), -1.0)
    is_tol(sign(-10.5), -1.0)
    is_tol(sign(-10.9), -1.0)
  }

  "Double.squared" should "work" in {
    is_tol(squared(  0.0),   0.0)
    is_tol(squared( 10.0), 100.0)
    is_tol(squared( 10.1), 102.01)
    is_tol(squared( 10.5), 110.25)
    is_tol(squared( 10.9), 118.81)
    is_tol(squared(-10.0), 100.0)
    is_tol(squared(-10.1), 102.01)
    is_tol(squared(-10.5), 110.25)
    is_tol(squared(-10.9), 118.81)
  }

  "Double.sqrt" should "work" in {
    is_tol(sqrt( 0.0), 0.0)
    is_tol(sqrt(10.0), 3.1622776601684)
    is_tol(sqrt(10.1), 3.1780497164141)
    is_tol(sqrt(10.5), 3.2403703492039)
    is_tol(sqrt(10.9), 3.3015148038438)
  }

  "Double.exp" should "work" in {
    is_tol(exp(  0.0),     1.0)
    is_tol(exp( 10.0), 22026.465794807)
    is_tol(exp( 10.1), 24343.009424408)
    is_tol(exp( 10.5), 36315.502674247)
    is_tol(exp( 10.9), 54176.363796699)
    is_tol(exp(-10.0),     4.5399929762485e-05)
    is_tol(exp(-10.1),     4.1079555225301e-05)
    is_tol(exp(-10.5),     2.7536449349747e-05)
    is_tol(exp(-10.9),     1.8458233995781e-05)
  }

  "Double.midicps" should "work" in {
    is_tol(midiCps(  0.0),  8.1757989156437)
    is_tol(midiCps( 10.0), 14.56761754744)
    is_tol(midiCps( 10.1), 14.652006897392)
    is_tol(midiCps( 10.5), 14.994481324147)
    is_tol(midiCps( 10.9), 15.344960711166)
    is_tol(midiCps(-10.0),  4.5885119987095)
    is_tol(midiCps(-10.1),  4.5620841142888)
    is_tol(midiCps(-10.5),  4.4578859691128)
    is_tol(midiCps(-10.9),  4.3560677128618)
  }

  "Double.cpsmidi" should "work" in {
    is_tol(cpsMidi(  0.0), -inf)
    is_tol(cpsMidi( 10.0), 3.4868205763524)
    is_tol(cpsMidi( 10.1), 3.6590840920773)
    is_tol(cpsMidi( 10.5), 4.3314925110492)
    is_tol(cpsMidi( 10.9), 4.9787581963788)
    is_tol(cpsMidi(-10.0), 3.4868205763524)
    is_tol(cpsMidi(-10.1), 3.6590840920773)
    is_tol(cpsMidi(-10.5), 4.3314925110492)
    is_tol(cpsMidi(-10.9), 4.9787581963788)
  }

  "Double.midiratio" should "work" in {
    is_tol(midiRatio(  0.0), 1.0)
    is_tol(midiRatio( 10.0), 1.7817974362766)
    is_tol(midiRatio( 10.1), 1.7921192838197)
    is_tol(midiRatio( 10.5), 1.8340080864049)
    is_tol(midiRatio( 10.9), 1.8768759933376)
    is_tol(midiRatio(-10.0), 0.56123102415598)
    is_tol(midiRatio(-10.1), 0.55799857131641)
    is_tol(midiRatio(-10.5), 0.54525386633395)
    is_tol(midiRatio(-10.9), 0.53280025081558)
  }

  "Double.ratiomidi" should "work" in {
    is_tol(ratioMidi(  0.0), -inf)
    is_tol(ratioMidi( 10.0), 39.863137138648)
    is_tol(ratioMidi( 10.1), 40.035400654373)
    is_tol(ratioMidi( 10.5), 40.707809073345)
    is_tol(ratioMidi( 10.9), 41.355074758675)
    is_tol(ratioMidi(-10.0), 39.863137138648)
    is_tol(ratioMidi(-10.1), 40.035400654373)
    is_tol(ratioMidi(-10.5), 40.707809073345)
    is_tol(ratioMidi(-10.9), 41.355074758675)
  }

  "Double.dbamp" should "work" in {
    is_tol(dbAmp(  0.0), 1.0)
    is_tol(dbAmp( 10.0), 3.1622776601684)
    is_tol(dbAmp( 10.1), 3.1988951096914)
    is_tol(dbAmp( 10.5), 3.3496543915783)
    is_tol(dbAmp( 10.9), 3.5075187395257)
    is_tol(dbAmp(-10.0), 0.31622776601684)
    is_tol(dbAmp(-10.1), 0.3126079367124)
    is_tol(dbAmp(-10.5), 0.2985382618918)
    is_tol(dbAmp(-10.9), 0.28510182675039)
  }

  "Double.ampdb" should "work" in {
    is_tol(ampDb( 0.0), -inf)
    is_tol(ampDb(10.0), 20.0)
    is_tol(ampDb(10.1), 20.086427475653)
    is_tol(ampDb(10.5), 20.423785981399)
    is_tol(ampDb(10.9), 20.748529958812)
  }

  "Double.octcps" should "work" in {
    is_tol(octCps(  0.0),    16.351597831287)
    is_tol(octCps( 10.0), 16744.036179238)
    is_tol(octCps( 10.1), 17945.813632655)
    is_tol(octCps( 10.5), 23679.643053545)
    is_tol(octCps( 10.9), 31245.476333431)
    is_tol(octCps(-10.0),     0.015968357257117)
    is_tol(octCps(-10.1),     0.014899004141536)
    is_tol(octCps(-10.5),     0.011291333700917)
    is_tol(octCps(-10.9),     0.0085572307742382)
  }

  "Double.cpsoct" should "work" in {
    is_tol(cpsOct(  0.0), -inf)
    is_tol(cpsOct( 10.0), -0.70943161865461)
    is_tol(cpsOct( 10.1), -0.69507632567754)
    is_tol(cpsOct( 10.5), -0.63904229076321)
    is_tol(cpsOct( 10.9), -0.58510348365241)
    is_tol(cpsOct(-10.0), -0.70943161865461)
    is_tol(cpsOct(-10.1), -0.69507632567754)
    is_tol(cpsOct(-10.5), -0.63904229076321)
    is_tol(cpsOct(-10.9), -0.58510348365241)
  }

  "Double.log" should "work" in {
    is_tol(log( 0.0), -inf)
    is_tol(log(10.0), 2.302585092994)
    is_tol(log(10.1), 2.3125354238472)
    is_tol(log(10.5), 2.3513752571635)
    is_tol(log(10.9), 2.3887627892351)
  }

  "Double.log2" should "work" in {
    is_tol(log2( 0.0), -inf)
    is_tol(log2(10.0), 3.3219280948874)
    is_tol(log2(10.1), 3.3362833878644)
    is_tol(log2(10.5), 3.3923174227788)
    is_tol(log2(10.9), 3.4462562298896)
  }

  "Double.log10" should "work" in {
    is_tol(log10( 0.0), -inf)
    is_tol(log10(10.0), 1.0)
    is_tol(log10(10.1), 1.0043213737826)
    is_tol(log10(10.5), 1.0211892990699)
    is_tol(log10(10.9), 1.0374264979406)
  }

  "Double.sin" should "work" in {
    is_tol(sin(  0.0),  0.0)
    is_tol(sin( 10.0), -0.54402111088937)
    is_tol(sin( 10.1), -0.62507064889288)
    is_tol(sin( 10.5), -0.87969575997167)
    is_tol(sin( 10.9), -0.99543625330638)
    is_tol(sin(-10.0),  0.54402111088937)
    is_tol(sin(-10.1),  0.62507064889288)
    is_tol(sin(-10.5),  0.87969575997167)
    is_tol(sin(-10.9),  0.99543625330638)
  }

  "Double.cos" should "work" in {
    is_tol(cos(  0.0),  1.0)
    is_tol(cos( 10.0), -0.83907152907645)
    is_tol(cos( 10.1), -0.78056818016918)
    is_tol(cos( 10.5), -0.47553692799599)
    is_tol(cos( 10.9), -0.095428851000951)
    is_tol(cos(-10.0), -0.83907152907645)
    is_tol(cos(-10.1), -0.78056818016918)
    is_tol(cos(-10.5), -0.47553692799599)
    is_tol(cos(-10.9), -0.095428851000951)
  }

  "Double.tan" should "work" in {
    is_tol(tan(  0.0),  0.0)
    is_tol(tan( 10.0),  0.64836082745909)
    is_tol(tan( 10.1),  0.80078930293751)
    is_tol(tan( 10.5),  1.8498999934219)
    is_tol(tan( 10.9), 10.431187663534)
    is_tol(tan(-10.0), -0.64836082745909)
    is_tol(tan(-10.1), -0.80078930293751)
    is_tol(tan(-10.5), -1.8498999934219)
    is_tol(tan(-10.9), -10.431187663534)
  }

  "Double.asin" should "work" in {
    is_tol(asin(0.0), 0.0)
  }

  "Double.acos" should "work" in {
    is_tol(acos(0.0), 1.5707963267949)
  }

  "Double.atan" should "work" in {
    is_tol(atan(  0.0),  0.0)
    is_tol(atan( 10.0),  1.4711276743037)
    is_tol(atan( 10.1),  1.4721080661465)
    is_tol(atan( 10.5),  1.4758446204521)
    is_tol(atan( 10.9),  1.4793093099234)
    is_tol(atan(-10.0), -1.4711276743037)
    is_tol(atan(-10.1), -1.4721080661465)
    is_tol(atan(-10.5), -1.4758446204521)
    is_tol(atan(-10.9), -1.4793093099234)
  }

  "Double.sinh" should "work" in {
    is_tol(sinh(  0.0),      0.0)
    is_tol(sinh( 10.0),  11013.232874703)
    is_tol(sinh( 10.1),  12171.504691664)
    is_tol(sinh( 10.5),  18157.751323355)
    is_tol(sinh( 10.9),  27088.18188912)
    is_tol(sinh(-10.0), -11013.232874703)
    is_tol(sinh(-10.1), -12171.504691664)
    is_tol(sinh(-10.5), -18157.751323355)
    is_tol(sinh(-10.9), -27088.18188912)
  }

  "Double.cosh" should "work" in {
    is_tol(cosh(  0.0),     1.0)
    is_tol(cosh( 10.0), 11013.232920103)
    is_tol(cosh( 10.1), 12171.504732744)
    is_tol(cosh( 10.5), 18157.751350892)
    is_tol(cosh( 10.9), 27088.181907578)
    is_tol(cosh(-10.0), 11013.232920103)
    is_tol(cosh(-10.1), 12171.504732744)
    is_tol(cosh(-10.5), 18157.751350892)
    is_tol(cosh(-10.9), 27088.181907578)
  }

  "Double.tanh" should "work" in {
    is_tol(tanh(  0.0),  0.0)
    is_tol(tanh( 10.0),  0.99999999587769)
    is_tol(tanh( 10.1),  0.99999999662494)
    is_tol(tanh( 10.5),  0.99999999848349)
    is_tol(tanh( 10.9),  0.99999999931859)
    is_tol(tanh(-10.0), -0.99999999587769)
    is_tol(tanh(-10.1), -0.99999999662494)
    is_tol(tanh(-10.5), -0.99999999848349)
    is_tol(tanh(-10.9), -0.99999999931859)
  }

  "Double.cubed" should "work" in {
    is_tol(cubed(  0.0),     0.0)
    is_tol(cubed( 10.0),  1000.0)
    is_tol(cubed( 10.1),  1030.301)
    is_tol(cubed( 10.5),  1157.625)
    is_tol(cubed( 10.9),  1295.029)
    is_tol(cubed(-10.0), -1000.0)
    is_tol(cubed(-10.1), -1030.301)
    is_tol(cubed(-10.5), -1157.625)
    is_tol(cubed(-10.9), -1295.029)
  }

  "Double.reciprocal" should "work" in {
    is_tol(reciprocal(  0.0),  inf)
    is_tol(reciprocal( 10.0),  0.1)
    is_tol(reciprocal( 10.1),  0.099009900990099)
    is_tol(reciprocal( 10.5),  0.095238095238095)
    is_tol(reciprocal( 10.9),  0.091743119266055)
    is_tol(reciprocal(-10.0), -0.1)
    is_tol(reciprocal(-10.1), -0.099009900990099)
    is_tol(reciprocal(-10.5), -0.095238095238095)
    is_tol(reciprocal(-10.9), -0.091743119266055)
  }

  "Double.div" should "work" in {
    is(div(  0.0,  0.0),  0)
    is(div(  0.0,  6.0),  0)
    is(div(  0.0,  6.1),  0)
    is(div(  0.0,  6.5),  0)
    is(div(  0.0,  6.9),  0)
    is(div(  0.0, -6.0),  0)
    is(div(  0.0, -6.1),  0)
    is(div(  0.0, -6.5),  0)
    is(div(  0.0, -6.9),  0)
    is(div( 10.0,  0.0),  0)
    is(div( 10.0,  6.0),  1)
    is(div( 10.0,  6.1),  1)
    is(div( 10.0,  6.5),  1)
    is(div( 10.0,  6.9),  1)
    is(div( 10.0, -6.0), -2)
    is(div( 10.0, -6.1), -2)
    is(div( 10.0, -6.5), -2)
    is(div( 10.0, -6.9), -2)
    is(div( 10.1,  0.0),  0)
    is(div( 10.1,  6.0),  1)
    is(div( 10.1,  6.1),  1)
    is(div( 10.1,  6.5),  1)
    is(div( 10.1,  6.9),  1)
    is(div( 10.1, -6.0), -2)
    is(div( 10.1, -6.1), -2)
    is(div( 10.1, -6.5), -2)
    is(div( 10.1, -6.9), -2)
    is(div( 10.5,  0.0),  0)
    is(div( 10.5,  6.0),  1)
    is(div( 10.5,  6.1),  1)
    is(div( 10.5,  6.5),  1)
    is(div( 10.5,  6.9),  1)
    is(div( 10.5, -6.0), -2)
    is(div( 10.5, -6.1), -2)
    is(div( 10.5, -6.5), -2)
    is(div( 10.5, -6.9), -2)
    is(div( 10.9,  0.0),  0)
    is(div( 10.9,  6.0),  1)
    is(div( 10.9,  6.1),  1)
    is(div( 10.9,  6.5),  1)
    is(div( 10.9,  6.9),  1)
    is(div( 10.9, -6.0), -2)
    is(div( 10.9, -6.1), -2)
    is(div( 10.9, -6.5), -2)
    is(div( 10.9, -6.9), -2)
    is(div(-10.0,  0.0),  0)
    is(div(-10.0,  6.0), -2)
    is(div(-10.0,  6.1), -2)
    is(div(-10.0,  6.5), -2)
    is(div(-10.0,  6.9), -2)
    is(div(-10.0, -6.0),  1)
    is(div(-10.0, -6.1),  1)
    is(div(-10.0, -6.5),  1)
    is(div(-10.0, -6.9),  1)
    is(div(-10.1,  0.0),  0)
    is(div(-10.1,  6.0), -2)
    is(div(-10.1,  6.1), -2)
    is(div(-10.1,  6.5), -2)
    is(div(-10.1,  6.9), -2)
    is(div(-10.1, -6.0),  1)
    is(div(-10.1, -6.1),  1)
    is(div(-10.1, -6.5),  1)
    is(div(-10.1, -6.9),  1)
    is(div(-10.5,  0.0),  0)
    is(div(-10.5,  6.0), -2)
    is(div(-10.5,  6.1), -2)
    is(div(-10.5,  6.5), -2)
    is(div(-10.5,  6.9), -2)
    is(div(-10.5, -6.0),  1)
    is(div(-10.5, -6.1),  1)
    is(div(-10.5, -6.5),  1)
    is(div(-10.5, -6.9),  1)
    is(div(-10.9,  0.0),  0)
    is(div(-10.9,  6.0), -2)
    is(div(-10.9,  6.1), -2)
    is(div(-10.9,  6.5), -2)
    is(div(-10.9,  6.9), -2)
    is(div(-10.9, -6.0),  1)
    is(div(-10.9, -6.1),  1)
    is(div(-10.9, -6.5),  1)
    is(div(-10.9, -6.9),  1)
  }

  "Double.round" should "work" in {
    is_tol(round(0.0, 0.0), 0.0)
    is_tol(round(0.0, 6.0), 0.0)
    is_tol(round(0.0, 6.1), 0.0)
    is_tol(round(0.0, 6.5), 0.0)
    is_tol(round(0.0, 6.9), 0.0)
    is_tol(round(0.0, -6.0), -0.0)
    is_tol(round(0.0, -6.1), -0.0)
    is_tol(round(0.0, -6.5), -0.0)
    is_tol(round(0.0, -6.9), -0.0)
    is_tol(round(10.0, 0.0), 10.0)
    is_tol(round(10.0, 6.0), 12.0)
    is_tol(round(10.0, 6.1), 12.2)
    is_tol(round(10.0, 6.5), 13.0)
    is_tol(round(10.0, 6.9), 6.9)
    is_tol(round(10.0, -6.0), 12.0)
    is_tol(round(10.0, -6.1), 12.2)
    is_tol(round(10.0, -6.5), 13.0)
    is_tol(round(10.0, -6.9), 6.9)
    is_tol(round(10.1, 0.0), 10.1)
    is_tol(round(10.1, 6.0), 12.0)
    is_tol(round(10.1, 6.1), 12.2)
    is_tol(round(10.1, 6.5), 13.0)
    is_tol(round(10.1, 6.9), 6.9)
    is_tol(round(10.1, -6.0), 12.0)
    is_tol(round(10.1, -6.1), 12.2)
    is_tol(round(10.1, -6.5), 13.0)
    is_tol(round(10.1, -6.9), 6.9)
    is_tol(round(10.5, 0.0), 10.5)
    is_tol(round(10.5, 6.0), 12.0)
    is_tol(round(10.5, 6.1), 12.2)
    is_tol(round(10.5, 6.5), 13.0)
    is_tol(round(10.5, 6.9), 13.8)
    is_tol(round(10.5, -6.0), 12.0)
    is_tol(round(10.5, -6.1), 12.2)
    is_tol(round(10.5, -6.5), 13.0)
    is_tol(round(10.5, -6.9), 13.8)
    is_tol(round(10.9, 0.0), 10.9)
    is_tol(round(10.9, 6.0), 12.0)
    is_tol(round(10.9, 6.1), 12.2)
    is_tol(round(10.9, 6.5), 13.0)
    is_tol(round(10.9, 6.9), 13.8)
    is_tol(round(10.9, -6.0), 12.0)
    is_tol(round(10.9, -6.1), 12.2)
    is_tol(round(10.9, -6.5), 13.0)
    is_tol(round(10.9, -6.9), 13.8)
    is_tol(round(-10.0, 0.0), -10.0)
    is_tol(round(-10.0, 6.0), -12.0)
    is_tol(round(-10.0, 6.1), -12.2)
    is_tol(round(-10.0, 6.5), -13.0)
    is_tol(round(-10.0, 6.9), -6.9)
    is_tol(round(-10.0, -6.0), -12.0)
    is_tol(round(-10.0, -6.1), -12.2)
    is_tol(round(-10.0, -6.5), -13.0)
    is_tol(round(-10.0, -6.9), -6.9)
    is_tol(round(-10.1, 0.0), -10.1)
    is_tol(round(-10.1, 6.0), -12.0)
    is_tol(round(-10.1, 6.1), -12.2)
    is_tol(round(-10.1, 6.5), -13.0)
    is_tol(round(-10.1, 6.9), -6.9)
    is_tol(round(-10.1, -6.0), -12.0)
    is_tol(round(-10.1, -6.1), -12.2)
    is_tol(round(-10.1, -6.5), -13.0)
    is_tol(round(-10.1, -6.9), -6.9)
    is_tol(round(-10.5, 0.0), -10.5)
    is_tol(round(-10.5, 6.0), -12.0)
    is_tol(round(-10.5, 6.1), -12.2)
    is_tol(round(-10.5, 6.5), -13.0)
    is_tol(round(-10.5, 6.9), -13.8)
    is_tol(round(-10.5, -6.0), -12.0)
    is_tol(round(-10.5, -6.1), -12.2)
    is_tol(round(-10.5, -6.5), -13.0)
    is_tol(round(-10.5, -6.9), -13.8)
    is_tol(round(-10.9, 0.0), -10.9)
    is_tol(round(-10.9, 6.0), -12.0)
    is_tol(round(-10.9, 6.1), -12.2)
    is_tol(round(-10.9, 6.5), -13.0)
    is_tol(round(-10.9, 6.9), -13.8)
    is_tol(round(-10.9, -6.0), -12.0)
    is_tol(round(-10.9, -6.1), -12.2)
    is_tol(round(-10.9, -6.5), -13.0)
    is_tol(round(-10.9, -6.9), -13.8)
  }

  "Double.roundUp" should "work" in {
    is_tol(roundUp(0.0, 0.0), 0.0)
    is_tol(roundUp(0.0, 6.0), 0.0)
    is_tol(roundUp(0.0, 6.1), 0.0)
    is_tol(roundUp(0.0, 6.5), 0.0)
    is_tol(roundUp(0.0, 6.9), 0.0)
    is_tol(roundUp(0.0, -6.0), 0.0)
    is_tol(roundUp(0.0, -6.1), 0.0)
    is_tol(roundUp(0.0, -6.5), 0.0)
    is_tol(roundUp(0.0, -6.9), 0.0)
    is_tol(roundUp(10.0, 0.0), 10.0)
    is_tol(roundUp(10.0, 6.0), 12.0)
    is_tol(roundUp(10.0, 6.1), 12.2)
    is_tol(roundUp(10.0, 6.5), 13.0)
    is_tol(roundUp(10.0, 6.9), 13.8)
    is_tol(roundUp(10.0, -6.0), 6.0)
    is_tol(roundUp(10.0, -6.1), 6.1)
    is_tol(roundUp(10.0, -6.5), 6.5)
    is_tol(roundUp(10.0, -6.9), 6.9)
    is_tol(roundUp(10.1, 0.0), 10.1)
    is_tol(roundUp(10.1, 6.0), 12.0)
    is_tol(roundUp(10.1, 6.1), 12.2)
    is_tol(roundUp(10.1, 6.5), 13.0)
    is_tol(roundUp(10.1, 6.9), 13.8)
    is_tol(roundUp(10.1, -6.0), 6.0)
    is_tol(roundUp(10.1, -6.1), 6.1)
    is_tol(roundUp(10.1, -6.5), 6.5)
    is_tol(roundUp(10.1, -6.9), 6.9)
    is_tol(roundUp(10.5, 0.0), 10.5)
    is_tol(roundUp(10.5, 6.0), 12.0)
    is_tol(roundUp(10.5, 6.1), 12.2)
    is_tol(roundUp(10.5, 6.5), 13.0)
    is_tol(roundUp(10.5, 6.9), 13.8)
    is_tol(roundUp(10.5, -6.0), 6.0)
    is_tol(roundUp(10.5, -6.1), 6.1)
    is_tol(roundUp(10.5, -6.5), 6.5)
    is_tol(roundUp(10.5, -6.9), 6.9)
    is_tol(roundUp(10.9, 0.0), 10.9)
    is_tol(roundUp(10.9, 6.0), 12.0)
    is_tol(roundUp(10.9, 6.1), 12.2)
    is_tol(roundUp(10.9, 6.5), 13.0)
    is_tol(roundUp(10.9, 6.9), 13.8)
    is_tol(roundUp(10.9, -6.0), 6.0)
    is_tol(roundUp(10.9, -6.1), 6.1)
    is_tol(roundUp(10.9, -6.5), 6.5)
    is_tol(roundUp(10.9, -6.9), 6.9)
    is_tol(roundUp(-10.0, 0.0), -10.0)
    is_tol(roundUp(-10.0, 6.0), -6.0)
    is_tol(roundUp(-10.0, 6.1), -6.1)
    is_tol(roundUp(-10.0, 6.5), -6.5)
    is_tol(roundUp(-10.0, 6.9), -6.9)
    is_tol(roundUp(-10.0, -6.0), -12.0)
    is_tol(roundUp(-10.0, -6.1), -12.2)
    is_tol(roundUp(-10.0, -6.5), -13.0)
    is_tol(roundUp(-10.0, -6.9), -13.8)
    is_tol(roundUp(-10.1, 0.0), -10.1)
    is_tol(roundUp(-10.1, 6.0), -6.0)
    is_tol(roundUp(-10.1, 6.1), -6.1)
    is_tol(roundUp(-10.1, 6.5), -6.5)
    is_tol(roundUp(-10.1, 6.9), -6.9)
    is_tol(roundUp(-10.1, -6.0), -12.0)
    is_tol(roundUp(-10.1, -6.1), -12.2)
    is_tol(roundUp(-10.1, -6.5), -13.0)
    is_tol(roundUp(-10.1, -6.9), -13.8)
    is_tol(roundUp(-10.5, 0.0), -10.5)
    is_tol(roundUp(-10.5, 6.0), -6.0)
    is_tol(roundUp(-10.5, 6.1), -6.1)
    is_tol(roundUp(-10.5, 6.5), -6.5)
    is_tol(roundUp(-10.5, 6.9), -6.9)
    is_tol(roundUp(-10.5, -6.0), -12.0)
    is_tol(roundUp(-10.5, -6.1), -12.2)
    is_tol(roundUp(-10.5, -6.5), -13.0)
    is_tol(roundUp(-10.5, -6.9), -13.8)
    is_tol(roundUp(-10.9, 0.0), -10.9)
    is_tol(roundUp(-10.9, 6.0), -6.0)
    is_tol(roundUp(-10.9, 6.1), -6.1)
    is_tol(roundUp(-10.9, 6.5), -6.5)
    is_tol(roundUp(-10.9, 6.9), -6.9)
    is_tol(roundUp(-10.9, -6.0), -12.0)
    is_tol(roundUp(-10.9, -6.1), -12.2)
    is_tol(roundUp(-10.9, -6.5), -13.0)
    is_tol(roundUp(-10.9, -6.9), -13.8)
  }

  "Double.trunc" should "work" in {
    is_tol(trunc(0.0, 0.0), 0.0)
    is_tol(trunc(0.0, 6.0), 0.0)
    is_tol(trunc(0.0, 6.1), 0.0)
    is_tol(trunc(0.0, 6.5), 0.0)
    is_tol(trunc(0.0, 6.9), 0.0)
    is_tol(trunc(0.0, -6.0), 0.0)
    is_tol(trunc(0.0, -6.1), 0.0)
    is_tol(trunc(0.0, -6.5), 0.0)
    is_tol(trunc(0.0, -6.9), 0.0)
    is_tol(trunc(10.0, 0.0), 10.0)
    is_tol(trunc(10.0, 6.0), 6.0)
    is_tol(trunc(10.0, 6.1), 6.1)
    is_tol(trunc(10.0, 6.5), 6.5)
    is_tol(trunc(10.0, 6.9), 6.9)
    is_tol(trunc(10.0, -6.0), 12.0)
    is_tol(trunc(10.0, -6.1), 12.2)
    is_tol(trunc(10.0, -6.5), 13.0)
    is_tol(trunc(10.0, -6.9), 13.8)
    is_tol(trunc(10.1, 0.0), 10.1)
    is_tol(trunc(10.1, 6.0), 6.0)
    is_tol(trunc(10.1, 6.1), 6.1)
    is_tol(trunc(10.1, 6.5), 6.5)
    is_tol(trunc(10.1, 6.9), 6.9)
    is_tol(trunc(10.1, -6.0), 12.0)
    is_tol(trunc(10.1, -6.1), 12.2)
    is_tol(trunc(10.1, -6.5), 13.0)
    is_tol(trunc(10.1, -6.9), 13.8)
    is_tol(trunc(10.5, 0.0), 10.5)
    is_tol(trunc(10.5, 6.0), 6.0)
    is_tol(trunc(10.5, 6.1), 6.1)
    is_tol(trunc(10.5, 6.5), 6.5)
    is_tol(trunc(10.5, 6.9), 6.9)
    is_tol(trunc(10.5, -6.0), 12.0)
    is_tol(trunc(10.5, -6.1), 12.2)
    is_tol(trunc(10.5, -6.5), 13.0)
    is_tol(trunc(10.5, -6.9), 13.8)
    is_tol(trunc(10.9, 0.0), 10.9)
    is_tol(trunc(10.9, 6.0), 6.0)
    is_tol(trunc(10.9, 6.1), 6.1)
    is_tol(trunc(10.9, 6.5), 6.5)
    is_tol(trunc(10.9, 6.9), 6.9)
    is_tol(trunc(10.9, -6.0), 12.0)
    is_tol(trunc(10.9, -6.1), 12.2)
    is_tol(trunc(10.9, -6.5), 13.0)
    is_tol(trunc(10.9, -6.9), 13.8)
    is_tol(trunc(-10.0, 0.0), -10.0)
    is_tol(trunc(-10.0, 6.0), -12.0)
    is_tol(trunc(-10.0, 6.1), -12.2)
    is_tol(trunc(-10.0, 6.5), -13.0)
    is_tol(trunc(-10.0, 6.9), -13.8)
    is_tol(trunc(-10.0, -6.0), -6.0)
    is_tol(trunc(-10.0, -6.1), -6.1)
    is_tol(trunc(-10.0, -6.5), -6.5)
    is_tol(trunc(-10.0, -6.9), -6.9)
    is_tol(trunc(-10.1, 0.0), -10.1)
    is_tol(trunc(-10.1, 6.0), -12.0)
    is_tol(trunc(-10.1, 6.1), -12.2)
    is_tol(trunc(-10.1, 6.5), -13.0)
    is_tol(trunc(-10.1, 6.9), -13.8)
    is_tol(trunc(-10.1, -6.0), -6.0)
    is_tol(trunc(-10.1, -6.1), -6.1)
    is_tol(trunc(-10.1, -6.5), -6.5)
    is_tol(trunc(-10.1, -6.9), -6.9)
    is_tol(trunc(-10.5, 0.0), -10.5)
    is_tol(trunc(-10.5, 6.0), -12.0)
    is_tol(trunc(-10.5, 6.1), -12.2)
    is_tol(trunc(-10.5, 6.5), -13.0)
    is_tol(trunc(-10.5, 6.9), -13.8)
    is_tol(trunc(-10.5, -6.0), -6.0)
    is_tol(trunc(-10.5, -6.1), -6.1)
    is_tol(trunc(-10.5, -6.5), -6.5)
    is_tol(trunc(-10.5, -6.9), -6.9)
    is_tol(trunc(-10.9, 0.0), -10.9)
    is_tol(trunc(-10.9, 6.0), -12.0)
    is_tol(trunc(-10.9, 6.1), -12.2)
    is_tol(trunc(-10.9, 6.5), -13.0)
    is_tol(trunc(-10.9, 6.9), -13.8)
    is_tol(trunc(-10.9, -6.0), -6.0)
    is_tol(trunc(-10.9, -6.1), -6.1)
    is_tol(trunc(-10.9, -6.5), -6.5)
    is_tol(trunc(-10.9, -6.9), -6.9)
  }

  "Double.atan2" should "work" in {
    is_tol(atan2(0.0, 0.0), 0.0)
    is_tol(atan2(0.0, 6.0), 0.0)
    is_tol(atan2(0.0, 6.1), 0.0)
    is_tol(atan2(0.0, 6.5), 0.0)
    is_tol(atan2(0.0, 6.9), 0.0)
    is_tol(atan2(0.0, -6.0), 3.1415926535898)
    is_tol(atan2(0.0, -6.1), 3.1415926535898)
    is_tol(atan2(0.0, -6.5), 3.1415926535898)
    is_tol(atan2(0.0, -6.9), 3.1415926535898)
    is_tol(atan2(10.0, 0.0), 1.5707963267949)
    is_tol(atan2(10.0, 6.0), 1.0303768265243)
    is_tol(atan2(10.0, 6.1), 1.023056313079)
    is_tol(atan2(10.0, 6.5), 0.99442110620371)
    is_tol(atan2(10.0, 6.9), 0.9668133485419)
    is_tol(atan2(10.0, -6.0), 2.1112158270655)
    is_tol(atan2(10.0, -6.1), 2.1185363405108)
    is_tol(atan2(10.0, -6.5), 2.1471715473861)
    is_tol(atan2(10.0, -6.9), 2.1747793050479)
    is_tol(atan2(10.1, 0.0), 1.5707963267949)
    is_tol(atan2(10.1, 6.0), 1.0347563605676)
    is_tol(atan2(10.1, 6.1), 1.0274698579686)
    is_tol(atan2(10.1, 6.5), 0.99895859687794)
    is_tol(atan2(10.1, 6.9), 0.97145634054645)
    is_tol(atan2(10.1, -6.0), 2.1068362930222)
    is_tol(atan2(10.1, -6.1), 2.1141227956212)
    is_tol(atan2(10.1, -6.5), 2.1426340567119)
    is_tol(atan2(10.1, -6.9), 2.1701363130433)
    is_tol(atan2(10.5, 0.0), 1.5707963267949)
    is_tol(atan2(10.5, 6.0), 1.0516502125484)
    is_tol(atan2(10.5, 6.1), 1.0445001811769)
    is_tol(atan2(10.5, 6.5), 1.0164888305933)
    is_tol(atan2(10.5, 6.9), 0.98941614299)
    is_tol(atan2(10.5, -6.0), 2.0899424410414)
    is_tol(atan2(10.5, -6.1), 2.0970924724129)
    is_tol(atan2(10.5, -6.5), 2.1251038229964)
    is_tol(atan2(10.5, -6.9), 2.1521765105998)
    is_tol(atan2(10.9, 0.0), 1.5707963267949)
    is_tol(atan2(10.9, 6.0), 1.0676010032055)
    is_tol(atan2(10.9, 6.1), 1.0605874125266)
    is_tol(atan2(10.9, 6.5), 1.0330795226463)
    is_tol(atan2(10.9, 6.9), 1.0064452260725)
    is_tol(atan2(10.9, -6.0), 2.0739916503843)
    is_tol(atan2(10.9, -6.1), 2.0810052410632)
    is_tol(atan2(10.9, -6.5), 2.1085131309435)
    is_tol(atan2(10.9, -6.9), 2.1351474275173)
    is_tol(atan2(-10.0, 0.0), -1.5707963267949)
    is_tol(atan2(-10.0, 6.0), -1.0303768265243)
    is_tol(atan2(-10.0, 6.1), -1.023056313079)
    is_tol(atan2(-10.0, 6.5), -0.99442110620371)
    is_tol(atan2(-10.0, 6.9), -0.9668133485419)
    is_tol(atan2(-10.0, -6.0), -2.1112158270655)
    is_tol(atan2(-10.0, -6.1), -2.1185363405108)
    is_tol(atan2(-10.0, -6.5), -2.1471715473861)
    is_tol(atan2(-10.0, -6.9), -2.1747793050479)
    is_tol(atan2(-10.1, 0.0), -1.5707963267949)
    is_tol(atan2(-10.1, 6.0), -1.0347563605676)
    is_tol(atan2(-10.1, 6.1), -1.0274698579686)
    is_tol(atan2(-10.1, 6.5), -0.99895859687794)
    is_tol(atan2(-10.1, 6.9), -0.97145634054645)
    is_tol(atan2(-10.1, -6.0), -2.1068362930222)
    is_tol(atan2(-10.1, -6.1), -2.1141227956212)
    is_tol(atan2(-10.1, -6.5), -2.1426340567119)
    is_tol(atan2(-10.1, -6.9), -2.1701363130433)
    is_tol(atan2(-10.5, 0.0), -1.5707963267949)
    is_tol(atan2(-10.5, 6.0), -1.0516502125484)
    is_tol(atan2(-10.5, 6.1), -1.0445001811769)
    is_tol(atan2(-10.5, 6.5), -1.0164888305933)
    is_tol(atan2(-10.5, 6.9), -0.98941614299)
    is_tol(atan2(-10.5, -6.0), -2.0899424410414)
    is_tol(atan2(-10.5, -6.1), -2.0970924724129)
    is_tol(atan2(-10.5, -6.5), -2.1251038229964)
    is_tol(atan2(-10.5, -6.9), -2.1521765105998)
    is_tol(atan2(-10.9, 0.0), -1.5707963267949)
    is_tol(atan2(-10.9, 6.0), -1.0676010032055)
    is_tol(atan2(-10.9, 6.1), -1.0605874125266)
    is_tol(atan2(-10.9, 6.5), -1.0330795226463)
    is_tol(atan2(-10.9, 6.9), -1.0064452260725)
    is_tol(atan2(-10.9, -6.0), -2.0739916503843)
    is_tol(atan2(-10.9, -6.1), -2.0810052410632)
    is_tol(atan2(-10.9, -6.5), -2.1085131309435)
    is_tol(atan2(-10.9, -6.9), -2.1351474275173)
  }

  "Double.hypot" should "work" in {
    is_tol(hypot(0.0, 0.0), 0.0)
    is_tol(hypot(0.0, 6.0), 6.0)
    is_tol(hypot(0.0, 6.1), 6.1)
    is_tol(hypot(0.0, 6.5), 6.5)
    is_tol(hypot(0.0, 6.9), 6.9)
    is_tol(hypot(0.0, -6.0), 6.0)
    is_tol(hypot(0.0, -6.1), 6.1)
    is_tol(hypot(0.0, -6.5), 6.5)
    is_tol(hypot(0.0, -6.9), 6.9)
    is_tol(hypot(10.0, 0.0), 10.0)
    is_tol(hypot(10.0, 6.0), 11.661903789691)
    is_tol(hypot(10.0, 6.1), 11.71366723106)
    is_tol(hypot(10.0, 6.5), 11.926860441877)
    is_tol(hypot(10.0, 6.9), 12.149485585818)
    is_tol(hypot(10.0, -6.0), 11.661903789691)
    is_tol(hypot(10.0, -6.1), 11.71366723106)
    is_tol(hypot(10.0, -6.5), 11.926860441877)
    is_tol(hypot(10.0, -6.9), 12.149485585818)
    is_tol(hypot(10.1, 0.0), 10.1)
    is_tol(hypot(10.1, 6.0), 11.747765745026)
    is_tol(hypot(10.1, 6.1), 11.799152511939)
    is_tol(hypot(10.1, 6.5), 12.010828447697)
    is_tol(hypot(10.1, 6.9), 12.231925441238)
    is_tol(hypot(10.1, -6.0), 11.747765745026)
    is_tol(hypot(10.1, -6.1), 11.799152511939)
    is_tol(hypot(10.1, -6.5), 12.010828447697)
    is_tol(hypot(10.1, -6.9), 12.231925441238)
    is_tol(hypot(10.5, 0.0), 10.5)
    is_tol(hypot(10.5, 6.0), 12.093386622448)
    is_tol(hypot(10.5, 6.1), 12.143310915891)
    is_tol(hypot(10.5, 6.5), 12.349089035228)
    is_tol(hypot(10.5, 6.9), 12.564234954823)
    is_tol(hypot(10.5, -6.0), 12.093386622448)
    is_tol(hypot(10.5, -6.1), 12.143310915891)
    is_tol(hypot(10.5, -6.5), 12.349089035228)
    is_tol(hypot(10.5, -6.9), 12.564234954823)
    is_tol(hypot(10.9, 0.0), 10.9)
    is_tol(hypot(10.9, 6.0), 12.442266674525)
    is_tol(hypot(10.9, 6.1), 12.490796611906)
    is_tol(hypot(10.9, 6.5), 12.69094165143)
    is_tol(hypot(10.9, 6.9), 12.900387591076)
    is_tol(hypot(10.9, -6.0), 12.442266674525)
    is_tol(hypot(10.9, -6.1), 12.490796611906)
    is_tol(hypot(10.9, -6.5), 12.69094165143)
    is_tol(hypot(10.9, -6.9), 12.900387591076)
    is_tol(hypot(-10.0, 0.0), 10.0)
    is_tol(hypot(-10.0, 6.0), 11.661903789691)
    is_tol(hypot(-10.0, 6.1), 11.71366723106)
    is_tol(hypot(-10.0, 6.5), 11.926860441877)
    is_tol(hypot(-10.0, 6.9), 12.149485585818)
    is_tol(hypot(-10.0, -6.0), 11.661903789691)
    is_tol(hypot(-10.0, -6.1), 11.71366723106)
    is_tol(hypot(-10.0, -6.5), 11.926860441877)
    is_tol(hypot(-10.0, -6.9), 12.149485585818)
    is_tol(hypot(-10.1, 0.0), 10.1)
    is_tol(hypot(-10.1, 6.0), 11.747765745026)
    is_tol(hypot(-10.1, 6.1), 11.799152511939)
    is_tol(hypot(-10.1, 6.5), 12.010828447697)
    is_tol(hypot(-10.1, 6.9), 12.231925441238)
    is_tol(hypot(-10.1, -6.0), 11.747765745026)
    is_tol(hypot(-10.1, -6.1), 11.799152511939)
    is_tol(hypot(-10.1, -6.5), 12.010828447697)
    is_tol(hypot(-10.1, -6.9), 12.231925441238)
    is_tol(hypot(-10.5, 0.0), 10.5)
    is_tol(hypot(-10.5, 6.0), 12.093386622448)
    is_tol(hypot(-10.5, 6.1), 12.143310915891)
    is_tol(hypot(-10.5, 6.5), 12.349089035228)
    is_tol(hypot(-10.5, 6.9), 12.564234954823)
    is_tol(hypot(-10.5, -6.0), 12.093386622448)
    is_tol(hypot(-10.5, -6.1), 12.143310915891)
    is_tol(hypot(-10.5, -6.5), 12.349089035228)
    is_tol(hypot(-10.5, -6.9), 12.564234954823)
    is_tol(hypot(-10.9, 0.0), 10.9)
    is_tol(hypot(-10.9, 6.0), 12.442266674525)
    is_tol(hypot(-10.9, 6.1), 12.490796611906)
    is_tol(hypot(-10.9, 6.5), 12.69094165143)
    is_tol(hypot(-10.9, 6.9), 12.900387591076)
    is_tol(hypot(-10.9, -6.0), 12.442266674525)
    is_tol(hypot(-10.9, -6.1), 12.490796611906)
    is_tol(hypot(-10.9, -6.5), 12.69094165143)
    is_tol(hypot(-10.9, -6.9), 12.900387591076)
  }

  "Double.hypotApx" should "work" in {
    is_tol(hypotApx(0.0, 0.0), 0.0)
    is_tol(hypotApx(0.0, 6.0), 6.0)
    is_tol(hypotApx(0.0, 6.1), 6.1)
    is_tol(hypotApx(0.0, 6.5), 6.5)
    is_tol(hypotApx(0.0, 6.9), 6.9)
    is_tol(hypotApx(0.0, -6.0), 6.0)
    is_tol(hypotApx(0.0, -6.1), 6.1)
    is_tol(hypotApx(0.0, -6.5), 6.5)
    is_tol(hypotApx(0.0, -6.9), 6.9)
    is_tol(hypotApx(10.0, 0.0), 10.0)
    is_tol(hypotApx(10.0, 6.0), 13.514718592167)
    is_tol(hypotApx(10.0, 6.1), 13.57329723537)
    is_tol(hypotApx(10.0, 6.5), 13.807611808181)
    is_tol(hypotApx(10.0, 6.9), 14.041926380992)
    is_tol(hypotApx(10.0, -6.0), 13.514718592167)
    is_tol(hypotApx(10.0, -6.1), 13.57329723537)
    is_tol(hypotApx(10.0, -6.5), 13.807611808181)
    is_tol(hypotApx(10.0, -6.9), 14.041926380992)
    is_tol(hypotApx(10.1, 0.0), 10.1)
    is_tol(hypotApx(10.1, 6.0), 13.614718592167)
    is_tol(hypotApx(10.1, 6.1), 13.67329723537)
    is_tol(hypotApx(10.1, 6.5), 13.907611808181)
    is_tol(hypotApx(10.1, 6.9), 14.141926380992)
    is_tol(hypotApx(10.1, -6.0), 13.614718592167)
    is_tol(hypotApx(10.1, -6.1), 13.67329723537)
    is_tol(hypotApx(10.1, -6.5), 13.907611808181)
    is_tol(hypotApx(10.1, -6.9), 14.141926380992)
    is_tol(hypotApx(10.5, 0.0), 10.5)
    is_tol(hypotApx(10.5, 6.0), 14.014718592167)
    is_tol(hypotApx(10.5, 6.1), 14.07329723537)
    is_tol(hypotApx(10.5, 6.5), 14.307611808181)
    is_tol(hypotApx(10.5, 6.9), 14.541926380992)
    is_tol(hypotApx(10.5, -6.0), 14.014718592167)
    is_tol(hypotApx(10.5, -6.1), 14.07329723537)
    is_tol(hypotApx(10.5, -6.5), 14.307611808181)
    is_tol(hypotApx(10.5, -6.9), 14.541926380992)
    is_tol(hypotApx(10.9, 0.0), 10.9)
    is_tol(hypotApx(10.9, 6.0), 14.414718592167)
    is_tol(hypotApx(10.9, 6.1), 14.47329723537)
    is_tol(hypotApx(10.9, 6.5), 14.707611808181)
    is_tol(hypotApx(10.9, 6.9), 14.941926380992)
    is_tol(hypotApx(10.9, -6.0), 14.414718592167)
    is_tol(hypotApx(10.9, -6.1), 14.47329723537)
    is_tol(hypotApx(10.9, -6.5), 14.707611808181)
    is_tol(hypotApx(10.9, -6.9), 14.941926380992)
    is_tol(hypotApx(-10.0, 0.0), 10.0)
    is_tol(hypotApx(-10.0, 6.0), 13.514718592167)
    is_tol(hypotApx(-10.0, 6.1), 13.57329723537)
    is_tol(hypotApx(-10.0, 6.5), 13.807611808181)
    is_tol(hypotApx(-10.0, 6.9), 14.041926380992)
    is_tol(hypotApx(-10.0, -6.0), 13.514718592167)
    is_tol(hypotApx(-10.0, -6.1), 13.57329723537)
    is_tol(hypotApx(-10.0, -6.5), 13.807611808181)
    is_tol(hypotApx(-10.0, -6.9), 14.041926380992)
    is_tol(hypotApx(-10.1, 0.0), 10.1)
    is_tol(hypotApx(-10.1, 6.0), 13.614718592167)
    is_tol(hypotApx(-10.1, 6.1), 13.67329723537)
    is_tol(hypotApx(-10.1, 6.5), 13.907611808181)
    is_tol(hypotApx(-10.1, 6.9), 14.141926380992)
    is_tol(hypotApx(-10.1, -6.0), 13.614718592167)
    is_tol(hypotApx(-10.1, -6.1), 13.67329723537)
    is_tol(hypotApx(-10.1, -6.5), 13.907611808181)
    is_tol(hypotApx(-10.1, -6.9), 14.141926380992)
    is_tol(hypotApx(-10.5, 0.0), 10.5)
    is_tol(hypotApx(-10.5, 6.0), 14.014718592167)
    is_tol(hypotApx(-10.5, 6.1), 14.07329723537)
    is_tol(hypotApx(-10.5, 6.5), 14.307611808181)
    is_tol(hypotApx(-10.5, 6.9), 14.541926380992)
    is_tol(hypotApx(-10.5, -6.0), 14.014718592167)
    is_tol(hypotApx(-10.5, -6.1), 14.07329723537)
    is_tol(hypotApx(-10.5, -6.5), 14.307611808181)
    is_tol(hypotApx(-10.5, -6.9), 14.541926380992)
    is_tol(hypotApx(-10.9, 0.0), 10.9)
    is_tol(hypotApx(-10.9, 6.0), 14.414718592167)
    is_tol(hypotApx(-10.9, 6.1), 14.47329723537)
    is_tol(hypotApx(-10.9, 6.5), 14.707611808181)
    is_tol(hypotApx(-10.9, 6.9), 14.941926380992)
    is_tol(hypotApx(-10.9, -6.0), 14.414718592167)
    is_tol(hypotApx(-10.9, -6.1), 14.47329723537)
    is_tol(hypotApx(-10.9, -6.5), 14.707611808181)
    is_tol(hypotApx(-10.9, -6.9), 14.941926380992)
  }

  "Double.pow" should "work" in {
    is_tol(pow(0.0, 0.0), 1.0)
    is_tol(pow(0.0, 6.0), 0.0)
    is_tol(pow(0.0, 6.1), 0.0)
    is_tol(pow(0.0, 6.5), 0.0)
    is_tol(pow(0.0, 6.9), 0.0)
    is_tol(pow(0.0, -6.0), inf)
    is_tol(pow(0.0, -6.1), inf)
    is_tol(pow(0.0, -6.5), inf)
    is_tol(pow(0.0, -6.9), inf)
    is_tol(pow(10.0, 0.0), 1.0)
    is_tol(pow(10.0, 6.0), 1000000.0)
    is_tol(pow(10.0, 6.1), 1258925.4117942)
    is_tol(pow(10.0, 6.5), 3162277.6601684)
    is_tol(pow(10.0, 6.9), 7943282.3472428)
    is_tol(pow(10.0, -6.0), 1e-06)
    is_tol(pow(10.0, -6.1), 7.9432823472428e-07)
    is_tol(pow(10.0, -6.5), 3.1622776601684e-07)
    is_tol(pow(10.0, -6.9), 1.2589254117942e-07)
    is_tol(pow(10.1, 0.0), 1.0)
    is_tol(pow(10.1, 6.0), 1061520.150601)
    is_tol(pow(10.1, 6.1), 1337705.0915425)
    is_tol(pow(10.1, 6.5), 3373563.8135854)
    is_tol(pow(10.1, 6.9), 8507804.0565802)
    is_tol(pow(10.1, -6.0), 9.4204523525421e-07)
    is_tol(pow(10.1, -6.1), 7.4754892264552e-07)
    is_tol(pow(10.1, -6.5), 2.9642243492564e-07)
    is_tol(pow(10.1, -6.9), 1.1753914327947e-07)
    is_tol(pow(10.5, 0.0), 1.0)
    is_tol(pow(10.5, 6.0), 1340095.640625)
    is_tol(pow(10.5, 6.1), 1695331.8624647)
    is_tol(pow(10.5, 6.5), 4342406.1789787)
    is_tol(pow(10.5, 6.9), 11122596.018351)
    is_tol(pow(10.5, -6.0), 7.4621539663663e-07)
    is_tol(pow(10.5, -6.1), 5.8985501431336e-07)
    is_tol(pow(10.5, -6.5), 2.3028707098865e-07)
    is_tol(pow(10.5, -6.9), 8.9907068309427e-08)
    is_tol(pow(10.9, 0.0), 1.0)
    is_tol(pow(10.9, 6.0), 1677100.110841)
    is_tol(pow(10.9, 6.1), 2129617.6495827)
    is_tol(pow(10.9, 6.5), 5536970.8434697)
    is_tol(pow(10.9, 6.9), 14396033.07544)
    is_tol(pow(10.9, -6.0), 5.9626732687922e-07)
    is_tol(pow(10.9, -6.1), 4.695678589046e-07)
    is_tol(pow(10.9, -6.5), 1.8060416575597e-07)
    is_tol(pow(10.9, -6.9), 6.9463580332142e-08)
    is_tol(pow(-10.0, 0.0), 1.0)
    is_tol(pow(-10.0, 6.0), 1000000.0)
    is_tol(pow(-10.0, -6.0), 1e-06)
    is_tol(pow(-10.1, 0.0), 1.0)
    is_tol(pow(-10.1, 6.0), 1061520.150601)
    is_tol(pow(-10.1, -6.0), 9.4204523525421e-07)
    is_tol(pow(-10.5, 0.0), 1.0)
    is_tol(pow(-10.5, 6.0), 1340095.640625)
    is_tol(pow(-10.5, -6.0), 7.4621539663663e-07)
    is_tol(pow(-10.9, 0.0), 1.0)
    is_tol(pow(-10.9, 6.0), 1677100.110841)
    is_tol(pow(-10.9, -6.0), 5.9626732687922e-07)
  }

  "Double.difsqr" should "work" in {
    is_tol(difSqr(0.0, 0.0), 0.0)
    is_tol(difSqr(0.0, 6.0), -36.0)
    is_tol(difSqr(0.0, 6.1), -37.21)
    is_tol(difSqr(0.0, 6.5), -42.25)
    is_tol(difSqr(0.0, 6.9), -47.61)
    is_tol(difSqr(0.0, -6.0), -36.0)
    is_tol(difSqr(0.0, -6.1), -37.21)
    is_tol(difSqr(0.0, -6.5), -42.25)
    is_tol(difSqr(0.0, -6.9), -47.61)
    is_tol(difSqr(10.0, 0.0), 100.0)
    is_tol(difSqr(10.0, 6.0), 64.0)
    is_tol(difSqr(10.0, 6.1), 62.79)
    is_tol(difSqr(10.0, 6.5), 57.75)
    is_tol(difSqr(10.0, 6.9), 52.39)
    is_tol(difSqr(10.0, -6.0), 64.0)
    is_tol(difSqr(10.0, -6.1), 62.79)
    is_tol(difSqr(10.0, -6.5), 57.75)
    is_tol(difSqr(10.0, -6.9), 52.39)
    is_tol(difSqr(10.1, 0.0), 102.01)
    is_tol(difSqr(10.1, 6.0), 66.01)
    is_tol(difSqr(10.1, 6.1), 64.8)
    is_tol(difSqr(10.1, 6.5), 59.76)
    is_tol(difSqr(10.1, 6.9), 54.4)
    is_tol(difSqr(10.1, -6.0), 66.01)
    is_tol(difSqr(10.1, -6.1), 64.8)
    is_tol(difSqr(10.1, -6.5), 59.76)
    is_tol(difSqr(10.1, -6.9), 54.4)
    is_tol(difSqr(10.5, 0.0), 110.25)
    is_tol(difSqr(10.5, 6.0), 74.25)
    is_tol(difSqr(10.5, 6.1), 73.04)
    is_tol(difSqr(10.5, 6.5), 68.0)
    is_tol(difSqr(10.5, 6.9), 62.64)
    is_tol(difSqr(10.5, -6.0), 74.25)
    is_tol(difSqr(10.5, -6.1), 73.04)
    is_tol(difSqr(10.5, -6.5), 68.0)
    is_tol(difSqr(10.5, -6.9), 62.64)
    is_tol(difSqr(10.9, 0.0), 118.81)
    is_tol(difSqr(10.9, 6.0), 82.81)
    is_tol(difSqr(10.9, 6.1), 81.6)
    is_tol(difSqr(10.9, 6.5), 76.56)
    is_tol(difSqr(10.9, 6.9), 71.2)
    is_tol(difSqr(10.9, -6.0), 82.81)
    is_tol(difSqr(10.9, -6.1), 81.6)
    is_tol(difSqr(10.9, -6.5), 76.56)
    is_tol(difSqr(10.9, -6.9), 71.2)
    is_tol(difSqr(-10.0, 0.0), 100.0)
    is_tol(difSqr(-10.0, 6.0), 64.0)
    is_tol(difSqr(-10.0, 6.1), 62.79)
    is_tol(difSqr(-10.0, 6.5), 57.75)
    is_tol(difSqr(-10.0, 6.9), 52.39)
    is_tol(difSqr(-10.0, -6.0), 64.0)
    is_tol(difSqr(-10.0, -6.1), 62.79)
    is_tol(difSqr(-10.0, -6.5), 57.75)
    is_tol(difSqr(-10.0, -6.9), 52.39)
    is_tol(difSqr(-10.1, 0.0), 102.01)
    is_tol(difSqr(-10.1, 6.0), 66.01)
    is_tol(difSqr(-10.1, 6.1), 64.8)
    is_tol(difSqr(-10.1, 6.5), 59.76)
    is_tol(difSqr(-10.1, 6.9), 54.4)
    is_tol(difSqr(-10.1, -6.0), 66.01)
    is_tol(difSqr(-10.1, -6.1), 64.8)
    is_tol(difSqr(-10.1, -6.5), 59.76)
    is_tol(difSqr(-10.1, -6.9), 54.4)
    is_tol(difSqr(-10.5, 0.0), 110.25)
    is_tol(difSqr(-10.5, 6.0), 74.25)
    is_tol(difSqr(-10.5, 6.1), 73.04)
    is_tol(difSqr(-10.5, 6.5), 68.0)
    is_tol(difSqr(-10.5, 6.9), 62.64)
    is_tol(difSqr(-10.5, -6.0), 74.25)
    is_tol(difSqr(-10.5, -6.1), 73.04)
    is_tol(difSqr(-10.5, -6.5), 68.0)
    is_tol(difSqr(-10.5, -6.9), 62.64)
    is_tol(difSqr(-10.9, 0.0), 118.81)
    is_tol(difSqr(-10.9, 6.0), 82.81)
    is_tol(difSqr(-10.9, 6.1), 81.6)
    is_tol(difSqr(-10.9, 6.5), 76.56)
    is_tol(difSqr(-10.9, 6.9), 71.2)
    is_tol(difSqr(-10.9, -6.0), 82.81)
    is_tol(difSqr(-10.9, -6.1), 81.6)
    is_tol(difSqr(-10.9, -6.5), 76.56)
    is_tol(difSqr(-10.9, -6.9), 71.2)
  }

  "Double.sumsqr" should "work" in {
    is_tol(sumSqr(0.0, 0.0), 0.0)
    is_tol(sumSqr(0.0, 6.0), 36.0)
    is_tol(sumSqr(0.0, 6.1), 37.21)
    is_tol(sumSqr(0.0, 6.5), 42.25)
    is_tol(sumSqr(0.0, 6.9), 47.61)
    is_tol(sumSqr(0.0, -6.0), 36.0)
    is_tol(sumSqr(0.0, -6.1), 37.21)
    is_tol(sumSqr(0.0, -6.5), 42.25)
    is_tol(sumSqr(0.0, -6.9), 47.61)
    is_tol(sumSqr(10.0, 0.0), 100.0)
    is_tol(sumSqr(10.0, 6.0), 136.0)
    is_tol(sumSqr(10.0, 6.1), 137.21)
    is_tol(sumSqr(10.0, 6.5), 142.25)
    is_tol(sumSqr(10.0, 6.9), 147.61)
    is_tol(sumSqr(10.0, -6.0), 136.0)
    is_tol(sumSqr(10.0, -6.1), 137.21)
    is_tol(sumSqr(10.0, -6.5), 142.25)
    is_tol(sumSqr(10.0, -6.9), 147.61)
    is_tol(sumSqr(10.1, 0.0), 102.01)
    is_tol(sumSqr(10.1, 6.0), 138.01)
    is_tol(sumSqr(10.1, 6.1), 139.22)
    is_tol(sumSqr(10.1, 6.5), 144.26)
    is_tol(sumSqr(10.1, 6.9), 149.62)
    is_tol(sumSqr(10.1, -6.0), 138.01)
    is_tol(sumSqr(10.1, -6.1), 139.22)
    is_tol(sumSqr(10.1, -6.5), 144.26)
    is_tol(sumSqr(10.1, -6.9), 149.62)
    is_tol(sumSqr(10.5, 0.0), 110.25)
    is_tol(sumSqr(10.5, 6.0), 146.25)
    is_tol(sumSqr(10.5, 6.1), 147.46)
    is_tol(sumSqr(10.5, 6.5), 152.5)
    is_tol(sumSqr(10.5, 6.9), 157.86)
    is_tol(sumSqr(10.5, -6.0), 146.25)
    is_tol(sumSqr(10.5, -6.1), 147.46)
    is_tol(sumSqr(10.5, -6.5), 152.5)
    is_tol(sumSqr(10.5, -6.9), 157.86)
    is_tol(sumSqr(10.9, 0.0), 118.81)
    is_tol(sumSqr(10.9, 6.0), 154.81)
    is_tol(sumSqr(10.9, 6.1), 156.02)
    is_tol(sumSqr(10.9, 6.5), 161.06)
    is_tol(sumSqr(10.9, 6.9), 166.42)
    is_tol(sumSqr(10.9, -6.0), 154.81)
    is_tol(sumSqr(10.9, -6.1), 156.02)
    is_tol(sumSqr(10.9, -6.5), 161.06)
    is_tol(sumSqr(10.9, -6.9), 166.42)
    is_tol(sumSqr(-10.0, 0.0), 100.0)
    is_tol(sumSqr(-10.0, 6.0), 136.0)
    is_tol(sumSqr(-10.0, 6.1), 137.21)
    is_tol(sumSqr(-10.0, 6.5), 142.25)
    is_tol(sumSqr(-10.0, 6.9), 147.61)
    is_tol(sumSqr(-10.0, -6.0), 136.0)
    is_tol(sumSqr(-10.0, -6.1), 137.21)
    is_tol(sumSqr(-10.0, -6.5), 142.25)
    is_tol(sumSqr(-10.0, -6.9), 147.61)
    is_tol(sumSqr(-10.1, 0.0), 102.01)
    is_tol(sumSqr(-10.1, 6.0), 138.01)
    is_tol(sumSqr(-10.1, 6.1), 139.22)
    is_tol(sumSqr(-10.1, 6.5), 144.26)
    is_tol(sumSqr(-10.1, 6.9), 149.62)
    is_tol(sumSqr(-10.1, -6.0), 138.01)
    is_tol(sumSqr(-10.1, -6.1), 139.22)
    is_tol(sumSqr(-10.1, -6.5), 144.26)
    is_tol(sumSqr(-10.1, -6.9), 149.62)
    is_tol(sumSqr(-10.5, 0.0), 110.25)
    is_tol(sumSqr(-10.5, 6.0), 146.25)
    is_tol(sumSqr(-10.5, 6.1), 147.46)
    is_tol(sumSqr(-10.5, 6.5), 152.5)
    is_tol(sumSqr(-10.5, 6.9), 157.86)
    is_tol(sumSqr(-10.5, -6.0), 146.25)
    is_tol(sumSqr(-10.5, -6.1), 147.46)
    is_tol(sumSqr(-10.5, -6.5), 152.5)
    is_tol(sumSqr(-10.5, -6.9), 157.86)
    is_tol(sumSqr(-10.9, 0.0), 118.81)
    is_tol(sumSqr(-10.9, 6.0), 154.81)
    is_tol(sumSqr(-10.9, 6.1), 156.02)
    is_tol(sumSqr(-10.9, 6.5), 161.06)
    is_tol(sumSqr(-10.9, 6.9), 166.42)
    is_tol(sumSqr(-10.9, -6.0), 154.81)
    is_tol(sumSqr(-10.9, -6.1), 156.02)
    is_tol(sumSqr(-10.9, -6.5), 161.06)
    is_tol(sumSqr(-10.9, -6.9), 166.42)
  }

  "Double.sqrsum" should "work" in {
    is_tol(sqrSum(0.0, 0.0), 0.0)
    is_tol(sqrSum(0.0, 6.0), 36.0)
    is_tol(sqrSum(0.0, 6.1), 37.21)
    is_tol(sqrSum(0.0, 6.5), 42.25)
    is_tol(sqrSum(0.0, 6.9), 47.61)
    is_tol(sqrSum(0.0, -6.0), 36.0)
    is_tol(sqrSum(0.0, -6.1), 37.21)
    is_tol(sqrSum(0.0, -6.5), 42.25)
    is_tol(sqrSum(0.0, -6.9), 47.61)
    is_tol(sqrSum(10.0, 0.0), 100.0)
    is_tol(sqrSum(10.0, 6.0), 256.0)
    is_tol(sqrSum(10.0, 6.1), 259.21)
    is_tol(sqrSum(10.0, 6.5), 272.25)
    is_tol(sqrSum(10.0, 6.9), 285.61)
    is_tol(sqrSum(10.0, -6.0), 16.0)
    is_tol(sqrSum(10.0, -6.1), 15.21)
    is_tol(sqrSum(10.0, -6.5), 12.25)
    is_tol(sqrSum(10.0, -6.9), 9.61)
    is_tol(sqrSum(10.1, 0.0), 102.01)
    is_tol(sqrSum(10.1, 6.0), 259.21)
    is_tol(sqrSum(10.1, 6.1), 262.44)
    is_tol(sqrSum(10.1, 6.5), 275.56)
    is_tol(sqrSum(10.1, 6.9), 289.0)
    is_tol(sqrSum(10.1, -6.0), 16.81)
    is_tol(sqrSum(10.1, -6.1), 16.0)
    is_tol(sqrSum(10.1, -6.5), 12.96)
    is_tol(sqrSum(10.1, -6.9), 10.24)
    is_tol(sqrSum(10.5, 0.0), 110.25)
    is_tol(sqrSum(10.5, 6.0), 272.25)
    is_tol(sqrSum(10.5, 6.1), 275.56)
    is_tol(sqrSum(10.5, 6.5), 289.0)
    is_tol(sqrSum(10.5, 6.9), 302.76)
    is_tol(sqrSum(10.5, -6.0), 20.25)
    is_tol(sqrSum(10.5, -6.1), 19.36)
    is_tol(sqrSum(10.5, -6.5), 16.0)
    is_tol(sqrSum(10.5, -6.9), 12.96)
    is_tol(sqrSum(10.9, 0.0), 118.81)
    is_tol(sqrSum(10.9, 6.0), 285.61)
    is_tol(sqrSum(10.9, 6.1), 289.0)
    is_tol(sqrSum(10.9, 6.5), 302.76)
    is_tol(sqrSum(10.9, 6.9), 316.84)
    is_tol(sqrSum(10.9, -6.0), 24.01)
    is_tol(sqrSum(10.9, -6.1), 23.04)
    is_tol(sqrSum(10.9, -6.5), 19.36)
    is_tol(sqrSum(10.9, -6.9), 16.0)
    is_tol(sqrSum(-10.0, 0.0), 100.0)
    is_tol(sqrSum(-10.0, 6.0), 16.0)
    is_tol(sqrSum(-10.0, 6.1), 15.21)
    is_tol(sqrSum(-10.0, 6.5), 12.25)
    is_tol(sqrSum(-10.0, 6.9), 9.61)
    is_tol(sqrSum(-10.0, -6.0), 256.0)
    is_tol(sqrSum(-10.0, -6.1), 259.21)
    is_tol(sqrSum(-10.0, -6.5), 272.25)
    is_tol(sqrSum(-10.0, -6.9), 285.61)
    is_tol(sqrSum(-10.1, 0.0), 102.01)
    is_tol(sqrSum(-10.1, 6.0), 16.81)
    is_tol(sqrSum(-10.1, 6.1), 16.0)
    is_tol(sqrSum(-10.1, 6.5), 12.96)
    is_tol(sqrSum(-10.1, 6.9), 10.24)
    is_tol(sqrSum(-10.1, -6.0), 259.21)
    is_tol(sqrSum(-10.1, -6.1), 262.44)
    is_tol(sqrSum(-10.1, -6.5), 275.56)
    is_tol(sqrSum(-10.1, -6.9), 289.0)
    is_tol(sqrSum(-10.5, 0.0), 110.25)
    is_tol(sqrSum(-10.5, 6.0), 20.25)
    is_tol(sqrSum(-10.5, 6.1), 19.36)
    is_tol(sqrSum(-10.5, 6.5), 16.0)
    is_tol(sqrSum(-10.5, 6.9), 12.96)
    is_tol(sqrSum(-10.5, -6.0), 272.25)
    is_tol(sqrSum(-10.5, -6.1), 275.56)
    is_tol(sqrSum(-10.5, -6.5), 289.0)
    is_tol(sqrSum(-10.5, -6.9), 302.76)
    is_tol(sqrSum(-10.9, 0.0), 118.81)
    is_tol(sqrSum(-10.9, 6.0), 24.01)
    is_tol(sqrSum(-10.9, 6.1), 23.04)
    is_tol(sqrSum(-10.9, 6.5), 19.36)
    is_tol(sqrSum(-10.9, 6.9), 16.0)
    is_tol(sqrSum(-10.9, -6.0), 285.61)
    is_tol(sqrSum(-10.9, -6.1), 289.0)
    is_tol(sqrSum(-10.9, -6.5), 302.76)
    is_tol(sqrSum(-10.9, -6.9), 316.84)
  }

  "Double.sqrdif" should "work" in {
    is_tol(sqrDif(0.0, 0.0), 0.0)
    is_tol(sqrDif(0.0, 6.0), 36.0)
    is_tol(sqrDif(0.0, 6.1), 37.21)
    is_tol(sqrDif(0.0, 6.5), 42.25)
    is_tol(sqrDif(0.0, 6.9), 47.61)
    is_tol(sqrDif(0.0, -6.0), 36.0)
    is_tol(sqrDif(0.0, -6.1), 37.21)
    is_tol(sqrDif(0.0, -6.5), 42.25)
    is_tol(sqrDif(0.0, -6.9), 47.61)
    is_tol(sqrDif(10.0, 0.0), 100.0)
    is_tol(sqrDif(10.0, 6.0), 16.0)
    is_tol(sqrDif(10.0, 6.1), 15.21)
    is_tol(sqrDif(10.0, 6.5), 12.25)
    is_tol(sqrDif(10.0, 6.9), 9.61)
    is_tol(sqrDif(10.0, -6.0), 256.0)
    is_tol(sqrDif(10.0, -6.1), 259.21)
    is_tol(sqrDif(10.0, -6.5), 272.25)
    is_tol(sqrDif(10.0, -6.9), 285.61)
    is_tol(sqrDif(10.1, 0.0), 102.01)
    is_tol(sqrDif(10.1, 6.0), 16.81)
    is_tol(sqrDif(10.1, 6.1), 16.0)
    is_tol(sqrDif(10.1, 6.5), 12.96)
    is_tol(sqrDif(10.1, 6.9), 10.24)
    is_tol(sqrDif(10.1, -6.0), 259.21)
    is_tol(sqrDif(10.1, -6.1), 262.44)
    is_tol(sqrDif(10.1, -6.5), 275.56)
    is_tol(sqrDif(10.1, -6.9), 289.0)
    is_tol(sqrDif(10.5, 0.0), 110.25)
    is_tol(sqrDif(10.5, 6.0), 20.25)
    is_tol(sqrDif(10.5, 6.1), 19.36)
    is_tol(sqrDif(10.5, 6.5), 16.0)
    is_tol(sqrDif(10.5, 6.9), 12.96)
    is_tol(sqrDif(10.5, -6.0), 272.25)
    is_tol(sqrDif(10.5, -6.1), 275.56)
    is_tol(sqrDif(10.5, -6.5), 289.0)
    is_tol(sqrDif(10.5, -6.9), 302.76)
    is_tol(sqrDif(10.9, 0.0), 118.81)
    is_tol(sqrDif(10.9, 6.0), 24.01)
    is_tol(sqrDif(10.9, 6.1), 23.04)
    is_tol(sqrDif(10.9, 6.5), 19.36)
    is_tol(sqrDif(10.9, 6.9), 16.0)
    is_tol(sqrDif(10.9, -6.0), 285.61)
    is_tol(sqrDif(10.9, -6.1), 289.0)
    is_tol(sqrDif(10.9, -6.5), 302.76)
    is_tol(sqrDif(10.9, -6.9), 316.84)
    is_tol(sqrDif(-10.0, 0.0), 100.0)
    is_tol(sqrDif(-10.0, 6.0), 256.0)
    is_tol(sqrDif(-10.0, 6.1), 259.21)
    is_tol(sqrDif(-10.0, 6.5), 272.25)
    is_tol(sqrDif(-10.0, 6.9), 285.61)
    is_tol(sqrDif(-10.0, -6.0), 16.0)
    is_tol(sqrDif(-10.0, -6.1), 15.21)
    is_tol(sqrDif(-10.0, -6.5), 12.25)
    is_tol(sqrDif(-10.0, -6.9), 9.61)
    is_tol(sqrDif(-10.1, 0.0), 102.01)
    is_tol(sqrDif(-10.1, 6.0), 259.21)
    is_tol(sqrDif(-10.1, 6.1), 262.44)
    is_tol(sqrDif(-10.1, 6.5), 275.56)
    is_tol(sqrDif(-10.1, 6.9), 289.0)
    is_tol(sqrDif(-10.1, -6.0), 16.81)
    is_tol(sqrDif(-10.1, -6.1), 16.0)
    is_tol(sqrDif(-10.1, -6.5), 12.96)
    is_tol(sqrDif(-10.1, -6.9), 10.24)
    is_tol(sqrDif(-10.5, 0.0), 110.25)
    is_tol(sqrDif(-10.5, 6.0), 272.25)
    is_tol(sqrDif(-10.5, 6.1), 275.56)
    is_tol(sqrDif(-10.5, 6.5), 289.0)
    is_tol(sqrDif(-10.5, 6.9), 302.76)
    is_tol(sqrDif(-10.5, -6.0), 20.25)
    is_tol(sqrDif(-10.5, -6.1), 19.36)
    is_tol(sqrDif(-10.5, -6.5), 16.0)
    is_tol(sqrDif(-10.5, -6.9), 12.96)
    is_tol(sqrDif(-10.9, 0.0), 118.81)
    is_tol(sqrDif(-10.9, 6.0), 285.61)
    is_tol(sqrDif(-10.9, 6.1), 289.0)
    is_tol(sqrDif(-10.9, 6.5), 302.76)
    is_tol(sqrDif(-10.9, 6.9), 316.84)
    is_tol(sqrDif(-10.9, -6.0), 24.01)
    is_tol(sqrDif(-10.9, -6.1), 23.04)
    is_tol(sqrDif(-10.9, -6.5), 19.36)
    is_tol(sqrDif(-10.9, -6.9), 16.0)
  }

  "Double.absdif" should "work" in {
    is_tol(absDif(0.0, 0.0), 0.0)
    is_tol(absDif(0.0, 6.0), 6.0)
    is_tol(absDif(0.0, 6.1), 6.1)
    is_tol(absDif(0.0, 6.5), 6.5)
    is_tol(absDif(0.0, 6.9), 6.9)
    is_tol(absDif(0.0, -6.0), 6.0)
    is_tol(absDif(0.0, -6.1), 6.1)
    is_tol(absDif(0.0, -6.5), 6.5)
    is_tol(absDif(0.0, -6.9), 6.9)
    is_tol(absDif(10.0, 0.0), 10.0)
    is_tol(absDif(10.0, 6.0), 4.0)
    is_tol(absDif(10.0, 6.1), 3.9)
    is_tol(absDif(10.0, 6.5), 3.5)
    is_tol(absDif(10.0, 6.9), 3.1)
    is_tol(absDif(10.0, -6.0), 16.0)
    is_tol(absDif(10.0, -6.1), 16.1)
    is_tol(absDif(10.0, -6.5), 16.5)
    is_tol(absDif(10.0, -6.9), 16.9)
    is_tol(absDif(10.1, 0.0), 10.1)
    is_tol(absDif(10.1, 6.0), 4.1)
    is_tol(absDif(10.1, 6.1), 4.0)
    is_tol(absDif(10.1, 6.5), 3.6)
    is_tol(absDif(10.1, 6.9), 3.2)
    is_tol(absDif(10.1, -6.0), 16.1)
    is_tol(absDif(10.1, -6.1), 16.2)
    is_tol(absDif(10.1, -6.5), 16.6)
    is_tol(absDif(10.1, -6.9), 17.0)
    is_tol(absDif(10.5, 0.0), 10.5)
    is_tol(absDif(10.5, 6.0), 4.5)
    is_tol(absDif(10.5, 6.1), 4.4)
    is_tol(absDif(10.5, 6.5), 4.0)
    is_tol(absDif(10.5, 6.9), 3.6)
    is_tol(absDif(10.5, -6.0), 16.5)
    is_tol(absDif(10.5, -6.1), 16.6)
    is_tol(absDif(10.5, -6.5), 17.0)
    is_tol(absDif(10.5, -6.9), 17.4)
    is_tol(absDif(10.9, 0.0), 10.9)
    is_tol(absDif(10.9, 6.0), 4.9)
    is_tol(absDif(10.9, 6.1), 4.8)
    is_tol(absDif(10.9, 6.5), 4.4)
    is_tol(absDif(10.9, 6.9), 4.0)
    is_tol(absDif(10.9, -6.0), 16.9)
    is_tol(absDif(10.9, -6.1), 17.0)
    is_tol(absDif(10.9, -6.5), 17.4)
    is_tol(absDif(10.9, -6.9), 17.8)
    is_tol(absDif(-10.0, 0.0), 10.0)
    is_tol(absDif(-10.0, 6.0), 16.0)
    is_tol(absDif(-10.0, 6.1), 16.1)
    is_tol(absDif(-10.0, 6.5), 16.5)
    is_tol(absDif(-10.0, 6.9), 16.9)
    is_tol(absDif(-10.0, -6.0), 4.0)
    is_tol(absDif(-10.0, -6.1), 3.9)
    is_tol(absDif(-10.0, -6.5), 3.5)
    is_tol(absDif(-10.0, -6.9), 3.1)
    is_tol(absDif(-10.1, 0.0), 10.1)
    is_tol(absDif(-10.1, 6.0), 16.1)
    is_tol(absDif(-10.1, 6.1), 16.2)
    is_tol(absDif(-10.1, 6.5), 16.6)
    is_tol(absDif(-10.1, 6.9), 17.0)
    is_tol(absDif(-10.1, -6.0), 4.1)
    is_tol(absDif(-10.1, -6.1), 4.0)
    is_tol(absDif(-10.1, -6.5), 3.6)
    is_tol(absDif(-10.1, -6.9), 3.2)
    is_tol(absDif(-10.5, 0.0), 10.5)
    is_tol(absDif(-10.5, 6.0), 16.5)
    is_tol(absDif(-10.5, 6.1), 16.6)
    is_tol(absDif(-10.5, 6.5), 17.0)
    is_tol(absDif(-10.5, 6.9), 17.4)
    is_tol(absDif(-10.5, -6.0), 4.5)
    is_tol(absDif(-10.5, -6.1), 4.4)
    is_tol(absDif(-10.5, -6.5), 4.0)
    is_tol(absDif(-10.5, -6.9), 3.6)
    is_tol(absDif(-10.9, 0.0), 10.9)
    is_tol(absDif(-10.9, 6.0), 16.9)
    is_tol(absDif(-10.9, 6.1), 17.0)
    is_tol(absDif(-10.9, 6.5), 17.4)
    is_tol(absDif(-10.9, 6.9), 17.8)
    is_tol(absDif(-10.9, -6.0), 4.9)
    is_tol(absDif(-10.9, -6.1), 4.8)
    is_tol(absDif(-10.9, -6.5), 4.4)
    is_tol(absDif(-10.9, -6.9), 4.0)
  }

  "Double.clip2" should "work" in {
    is_tol(clip2(0.0, 0.0), 0.0)
    is_tol(clip2(0.0, 6.0), 0.0)
    is_tol(clip2(0.0, 6.1), 0.0)
    is_tol(clip2(0.0, 6.5), 0.0)
    is_tol(clip2(0.0, 6.9), 0.0)
    is_tol(clip2(0.0, -6.0), 6.0)
    is_tol(clip2(0.0, -6.1), 6.1)
    is_tol(clip2(0.0, -6.5), 6.5)
    is_tol(clip2(0.0, -6.9), 6.9)
    is_tol(clip2(10.0, 0.0), 0.0)
    is_tol(clip2(10.0, 6.0), 6.0)
    is_tol(clip2(10.0, 6.1), 6.1)
    is_tol(clip2(10.0, 6.5), 6.5)
    is_tol(clip2(10.0, 6.9), 6.9)
    is_tol(clip2(10.0, -6.0), 6.0)
    is_tol(clip2(10.0, -6.1), 6.1)
    is_tol(clip2(10.0, -6.5), 6.5)
    is_tol(clip2(10.0, -6.9), 6.9)
    is_tol(clip2(10.1, 0.0), 0.0)
    is_tol(clip2(10.1, 6.0), 6.0)
    is_tol(clip2(10.1, 6.1), 6.1)
    is_tol(clip2(10.1, 6.5), 6.5)
    is_tol(clip2(10.1, 6.9), 6.9)
    is_tol(clip2(10.1, -6.0), 6.0)
    is_tol(clip2(10.1, -6.1), 6.1)
    is_tol(clip2(10.1, -6.5), 6.5)
    is_tol(clip2(10.1, -6.9), 6.9)
    is_tol(clip2(10.5, 0.0), 0.0)
    is_tol(clip2(10.5, 6.0), 6.0)
    is_tol(clip2(10.5, 6.1), 6.1)
    is_tol(clip2(10.5, 6.5), 6.5)
    is_tol(clip2(10.5, 6.9), 6.9)
    is_tol(clip2(10.5, -6.0), 6.0)
    is_tol(clip2(10.5, -6.1), 6.1)
    is_tol(clip2(10.5, -6.5), 6.5)
    is_tol(clip2(10.5, -6.9), 6.9)
    is_tol(clip2(10.9, 0.0), 0.0)
    is_tol(clip2(10.9, 6.0), 6.0)
    is_tol(clip2(10.9, 6.1), 6.1)
    is_tol(clip2(10.9, 6.5), 6.5)
    is_tol(clip2(10.9, 6.9), 6.9)
    is_tol(clip2(10.9, -6.0), 6.0)
    is_tol(clip2(10.9, -6.1), 6.1)
    is_tol(clip2(10.9, -6.5), 6.5)
    is_tol(clip2(10.9, -6.9), 6.9)
    is_tol(clip2(-10.0, 0.0), -0.0)
    is_tol(clip2(-10.0, 6.0), -6.0)
    is_tol(clip2(-10.0, 6.1), -6.1)
    is_tol(clip2(-10.0, 6.5), -6.5)
    is_tol(clip2(-10.0, 6.9), -6.9)
    is_tol(clip2(-10.0, -6.0), 6.0)
    is_tol(clip2(-10.0, -6.1), 6.1)
    is_tol(clip2(-10.0, -6.5), 6.5)
    is_tol(clip2(-10.0, -6.9), 6.9)
    is_tol(clip2(-10.1, 0.0), -0.0)
    is_tol(clip2(-10.1, 6.0), -6.0)
    is_tol(clip2(-10.1, 6.1), -6.1)
    is_tol(clip2(-10.1, 6.5), -6.5)
    is_tol(clip2(-10.1, 6.9), -6.9)
    is_tol(clip2(-10.1, -6.0), 6.0)
    is_tol(clip2(-10.1, -6.1), 6.1)
    is_tol(clip2(-10.1, -6.5), 6.5)
    is_tol(clip2(-10.1, -6.9), 6.9)
    is_tol(clip2(-10.5, 0.0), -0.0)
    is_tol(clip2(-10.5, 6.0), -6.0)
    is_tol(clip2(-10.5, 6.1), -6.1)
    is_tol(clip2(-10.5, 6.5), -6.5)
    is_tol(clip2(-10.5, 6.9), -6.9)
    is_tol(clip2(-10.5, -6.0), 6.0)
    is_tol(clip2(-10.5, -6.1), 6.1)
    is_tol(clip2(-10.5, -6.5), 6.5)
    is_tol(clip2(-10.5, -6.9), 6.9)
    is_tol(clip2(-10.9, 0.0), -0.0)
    is_tol(clip2(-10.9, 6.0), -6.0)
    is_tol(clip2(-10.9, 6.1), -6.1)
    is_tol(clip2(-10.9, 6.5), -6.5)
    is_tol(clip2(-10.9, 6.9), -6.9)
    is_tol(clip2(-10.9, -6.0), 6.0)
    is_tol(clip2(-10.9, -6.1), 6.1)
    is_tol(clip2(-10.9, -6.5), 6.5)
    is_tol(clip2(-10.9, -6.9), 6.9)
  }

  "Double.excess" should "work" in {
    is_tol(excess(0.0, 0.0), 0.0)
    is_tol(excess(0.0, 6.0), 0.0)
    is_tol(excess(0.0, 6.1), 0.0)
    is_tol(excess(0.0, 6.5), 0.0)
    is_tol(excess(0.0, 6.9), 0.0)
    is_tol(excess(0.0, -6.0), -6.0)
    is_tol(excess(0.0, -6.1), -6.1)
    is_tol(excess(0.0, -6.5), -6.5)
    is_tol(excess(0.0, -6.9), -6.9)
    is_tol(excess(10.0, 0.0), 10.0)
    is_tol(excess(10.0, 6.0), 4.0)
    is_tol(excess(10.0, 6.1), 3.9)
    is_tol(excess(10.0, 6.5), 3.5)
    is_tol(excess(10.0, 6.9), 3.1)
    is_tol(excess(10.0, -6.0), 4.0)
    is_tol(excess(10.0, -6.1), 3.9)
    is_tol(excess(10.0, -6.5), 3.5)
    is_tol(excess(10.0, -6.9), 3.1)
    is_tol(excess(10.1, 0.0), 10.1)
    is_tol(excess(10.1, 6.0), 4.1)
    is_tol(excess(10.1, 6.1), 4.0)
    is_tol(excess(10.1, 6.5), 3.6)
    is_tol(excess(10.1, 6.9), 3.2)
    is_tol(excess(10.1, -6.0), 4.1)
    is_tol(excess(10.1, -6.1), 4.0)
    is_tol(excess(10.1, -6.5), 3.6)
    is_tol(excess(10.1, -6.9), 3.2)
    is_tol(excess(10.5, 0.0), 10.5)
    is_tol(excess(10.5, 6.0), 4.5)
    is_tol(excess(10.5, 6.1), 4.4)
    is_tol(excess(10.5, 6.5), 4.0)
    is_tol(excess(10.5, 6.9), 3.6)
    is_tol(excess(10.5, -6.0), 4.5)
    is_tol(excess(10.5, -6.1), 4.4)
    is_tol(excess(10.5, -6.5), 4.0)
    is_tol(excess(10.5, -6.9), 3.6)
    is_tol(excess(10.9, 0.0), 10.9)
    is_tol(excess(10.9, 6.0), 4.9)
    is_tol(excess(10.9, 6.1), 4.8)
    is_tol(excess(10.9, 6.5), 4.4)
    is_tol(excess(10.9, 6.9), 4.0)
    is_tol(excess(10.9, -6.0), 4.9)
    is_tol(excess(10.9, -6.1), 4.8)
    is_tol(excess(10.9, -6.5), 4.4)
    is_tol(excess(10.9, -6.9), 4.0)
    is_tol(excess(-10.0, 0.0), -10.0)
    is_tol(excess(-10.0, 6.0), -4.0)
    is_tol(excess(-10.0, 6.1), -3.9)
    is_tol(excess(-10.0, 6.5), -3.5)
    is_tol(excess(-10.0, 6.9), -3.1)
    is_tol(excess(-10.0, -6.0), -16.0)
    is_tol(excess(-10.0, -6.1), -16.1)
    is_tol(excess(-10.0, -6.5), -16.5)
    is_tol(excess(-10.0, -6.9), -16.9)
    is_tol(excess(-10.1, 0.0), -10.1)
    is_tol(excess(-10.1, 6.0), -4.1)
    is_tol(excess(-10.1, 6.1), -4.0)
    is_tol(excess(-10.1, 6.5), -3.6)
    is_tol(excess(-10.1, 6.9), -3.2)
    is_tol(excess(-10.1, -6.0), -16.1)
    is_tol(excess(-10.1, -6.1), -16.2)
    is_tol(excess(-10.1, -6.5), -16.6)
    is_tol(excess(-10.1, -6.9), -17.0)
    is_tol(excess(-10.5, 0.0), -10.5)
    is_tol(excess(-10.5, 6.0), -4.5)
    is_tol(excess(-10.5, 6.1), -4.4)
    is_tol(excess(-10.5, 6.5), -4.0)
    is_tol(excess(-10.5, 6.9), -3.6)
    is_tol(excess(-10.5, -6.0), -16.5)
    is_tol(excess(-10.5, -6.1), -16.6)
    is_tol(excess(-10.5, -6.5), -17.0)
    is_tol(excess(-10.5, -6.9), -17.4)
    is_tol(excess(-10.9, 0.0), -10.9)
    is_tol(excess(-10.9, 6.0), -4.9)
    is_tol(excess(-10.9, 6.1), -4.8)
    is_tol(excess(-10.9, 6.5), -4.4)
    is_tol(excess(-10.9, 6.9), -4.0)
    is_tol(excess(-10.9, -6.0), -16.9)
    is_tol(excess(-10.9, -6.1), -17.0)
    is_tol(excess(-10.9, -6.5), -17.4)
    is_tol(excess(-10.9, -6.9), -17.8)
  }

  "Double.fold2" should "work" in {
    is_tol(fold2(0.0, 0.0), 0.0)
    is_tol(fold2(0.0, 6.0), 0.0)
    is_tol(fold2(0.0, 6.1), 0.0)
    is_tol(fold2(0.0, 6.5), 0.0)
    is_tol(fold2(0.0, 6.9), 0.0)
    is_tol(fold2(0.0, -6.0), -12.0)
    is_tol(fold2(0.0, -6.1), -12.2)
    is_tol(fold2(0.0, -6.5), -13.0)
    is_tol(fold2(0.0, -6.9), -13.8)
    is_tol(fold2(10.0, 0.0), -0.0)
    is_tol(fold2(10.0, 6.0), 2.0)
    is_tol(fold2(10.0, 6.1), 2.2)
    is_tol(fold2(10.0, 6.5), 3.0)
    is_tol(fold2(10.0, 6.9), 3.8)
    is_tol(fold2(10.0, -6.0), -14.0)
    is_tol(fold2(10.0, -6.1), -14.4)
    is_tol(fold2(10.0, -6.5), -16.0)
    is_tol(fold2(10.0, -6.9), -17.6)
    is_tol(fold2(10.1, 0.0), -0.0)
    is_tol(fold2(10.1, 6.0), 1.9)
    is_tol(fold2(10.1, 6.1), 2.1)
    is_tol(fold2(10.1, 6.5), 2.9)
    is_tol(fold2(10.1, 6.9), 3.7)
    is_tol(fold2(10.1, -6.0), -13.9)
    is_tol(fold2(10.1, -6.1), -14.3)
    is_tol(fold2(10.1, -6.5), -15.9)
    is_tol(fold2(10.1, -6.9), -17.5)
    is_tol(fold2(10.5, 0.0), -0.0)
    is_tol(fold2(10.5, 6.0), 1.5)
    is_tol(fold2(10.5, 6.1), 1.7)
    is_tol(fold2(10.5, 6.5), 2.5)
    is_tol(fold2(10.5, 6.9), 3.3)
    is_tol(fold2(10.5, -6.0), -13.5)
    is_tol(fold2(10.5, -6.1), -13.9)
    is_tol(fold2(10.5, -6.5), -15.5)
    is_tol(fold2(10.5, -6.9), -17.1)
    is_tol(fold2(10.9, 0.0), -0.0)
    is_tol(fold2(10.9, 6.0), 1.1)
    is_tol(fold2(10.9, 6.1), 1.3)
    is_tol(fold2(10.9, 6.5), 2.1)
    is_tol(fold2(10.9, 6.9), 2.9)
    is_tol(fold2(10.9, -6.0), -13.1)
    is_tol(fold2(10.9, -6.1), -13.5)
    is_tol(fold2(10.9, -6.5), -15.1)
    is_tol(fold2(10.9, -6.9), -16.7)
    is_tol(fold2(-10.0, 0.0), -0.0)
    is_tol(fold2(-10.0, 6.0), -2.0)
    is_tol(fold2(-10.0, 6.1), -2.2)
    is_tol(fold2(-10.0, 6.5), -3.0)
    is_tol(fold2(-10.0, 6.9), -3.8)
    is_tol(fold2(-10.0, -6.0), -10.0)
    is_tol(fold2(-10.0, -6.1), -10.0)
    is_tol(fold2(-10.0, -6.5), -10.0)
    is_tol(fold2(-10.0, -6.9), -10.0)
    is_tol(fold2(-10.1, 0.0), -0.0)
    is_tol(fold2(-10.1, 6.0), -1.9)
    is_tol(fold2(-10.1, 6.1), -2.1)
    is_tol(fold2(-10.1, 6.5), -2.9)
    is_tol(fold2(-10.1, 6.9), -3.7)
    is_tol(fold2(-10.1, -6.0), -10.1)
    is_tol(fold2(-10.1, -6.1), -10.1)
    is_tol(fold2(-10.1, -6.5), -10.1)
    is_tol(fold2(-10.1, -6.9), -10.1)
    is_tol(fold2(-10.5, 0.0), -0.0)
    is_tol(fold2(-10.5, 6.0), -1.5)
    is_tol(fold2(-10.5, 6.1), -1.7)
    is_tol(fold2(-10.5, 6.5), -2.5)
    is_tol(fold2(-10.5, 6.9), -3.3)
    is_tol(fold2(-10.5, -6.0), -10.5)
    is_tol(fold2(-10.5, -6.1), -10.5)
    is_tol(fold2(-10.5, -6.5), -10.5)
    is_tol(fold2(-10.5, -6.9), -10.5)
    is_tol(fold2(-10.9, 0.0), -0.0)
    is_tol(fold2(-10.9, 6.0), -1.1)
    is_tol(fold2(-10.9, 6.1), -1.3)
    is_tol(fold2(-10.9, 6.5), -2.1)
    is_tol(fold2(-10.9, 6.9), -2.9)
    is_tol(fold2(-10.9, -6.0), -10.9)
    is_tol(fold2(-10.9, -6.1), -10.9)
    is_tol(fold2(-10.9, -6.5), -10.9)
    is_tol(fold2(-10.9, -6.9), -10.9)
  }

  "Double.wrap2" should "work" in {
    is_tol(wrap2(0.0, 0.0), -0.0)
    is_tol(wrap2(0.0, 6.0), 0.0)
    is_tol(wrap2(0.0, 6.1), 0.0)
    is_tol(wrap2(0.0, 6.5), 0.0)
    is_tol(wrap2(0.0, 6.9), 0.0)
    is_tol(wrap2(0.0, -6.0), 0.0)
    is_tol(wrap2(0.0, -6.1), 0.0)
    is_tol(wrap2(0.0, -6.5), 0.0)
    is_tol(wrap2(0.0, -6.9), 0.0)
    is_tol(wrap2(10.0, 0.0), -0.0)
    is_tol(wrap2(10.0, 6.0), -2.0)
    is_tol(wrap2(10.0, 6.1), -2.2)
    is_tol(wrap2(10.0, 6.5), -3.0)
    is_tol(wrap2(10.0, 6.9), -3.8)
    is_tol(wrap2(10.0, -6.0), -2.0)
    is_tol(wrap2(10.0, -6.1), -2.2)
    is_tol(wrap2(10.0, -6.5), -3.0)
    is_tol(wrap2(10.0, -6.9), -3.8)
    is_tol(wrap2(10.1, 0.0), -0.0)
    is_tol(wrap2(10.1, 6.0), -1.9)
    is_tol(wrap2(10.1, 6.1), -2.1)
    is_tol(wrap2(10.1, 6.5), -2.9)
    is_tol(wrap2(10.1, 6.9), -3.7)
    is_tol(wrap2(10.1, -6.0), -1.9)
    is_tol(wrap2(10.1, -6.1), -2.1)
    is_tol(wrap2(10.1, -6.5), -2.9)
    is_tol(wrap2(10.1, -6.9), -3.7)
    is_tol(wrap2(10.5, 0.0), -0.0)
    is_tol(wrap2(10.5, 6.0), -1.5)
    is_tol(wrap2(10.5, 6.1), -1.7)
    is_tol(wrap2(10.5, 6.5), -2.5)
    is_tol(wrap2(10.5, 6.9), -3.3)
    is_tol(wrap2(10.5, -6.0), -1.5)
    is_tol(wrap2(10.5, -6.1), -1.7)
    is_tol(wrap2(10.5, -6.5), -2.5)
    is_tol(wrap2(10.5, -6.9), -3.3)
    is_tol(wrap2(10.9, 0.0), -0.0)
    is_tol(wrap2(10.9, 6.0), -1.1)
    is_tol(wrap2(10.9, 6.1), -1.3)
    is_tol(wrap2(10.9, 6.5), -2.1)
    is_tol(wrap2(10.9, 6.9), -2.9)
    is_tol(wrap2(10.9, -6.0), -1.1)
    is_tol(wrap2(10.9, -6.1), -1.3)
    is_tol(wrap2(10.9, -6.5), -2.1)
    is_tol(wrap2(10.9, -6.9), -2.9)
    is_tol(wrap2(-10.0, 0.0), -0.0)
    is_tol(wrap2(-10.0, 6.0), 2.0)
    is_tol(wrap2(-10.0, 6.1), 2.2)
    is_tol(wrap2(-10.0, 6.5), 3.0)
    is_tol(wrap2(-10.0, 6.9), 3.8)
    is_tol(wrap2(-10.0, -6.0), 2.0)
    is_tol(wrap2(-10.0, -6.1), 2.2)
    is_tol(wrap2(-10.0, -6.5), 3.0)
    is_tol(wrap2(-10.0, -6.9), 3.8)
    is_tol(wrap2(-10.1, 0.0), -0.0)
    is_tol(wrap2(-10.1, 6.0), 1.9)
    is_tol(wrap2(-10.1, 6.1), 2.1)
    is_tol(wrap2(-10.1, 6.5), 2.9)
    is_tol(wrap2(-10.1, 6.9), 3.7)
    is_tol(wrap2(-10.1, -6.0), 1.9)
    is_tol(wrap2(-10.1, -6.1), 2.1)
    is_tol(wrap2(-10.1, -6.5), 2.9)
    is_tol(wrap2(-10.1, -6.9), 3.7)
    is_tol(wrap2(-10.5, 0.0), -0.0)
    is_tol(wrap2(-10.5, 6.0), 1.5)
    is_tol(wrap2(-10.5, 6.1), 1.7)
    is_tol(wrap2(-10.5, 6.5), 2.5)
    is_tol(wrap2(-10.5, 6.9), 3.3)
    is_tol(wrap2(-10.5, -6.0), 1.5)
    is_tol(wrap2(-10.5, -6.1), 1.7)
    is_tol(wrap2(-10.5, -6.5), 2.5)
    is_tol(wrap2(-10.5, -6.9), 3.3)
    is_tol(wrap2(-10.9, 0.0), -0.0)
    is_tol(wrap2(-10.9, 6.0), 1.1)
    is_tol(wrap2(-10.9, 6.1), 1.3)
    is_tol(wrap2(-10.9, 6.5), 2.1)
    is_tol(wrap2(-10.9, 6.9), 2.9)
    is_tol(wrap2(-10.9, -6.0), 1.1)
    is_tol(wrap2(-10.9, -6.1), 1.3)
    is_tol(wrap2(-10.9, -6.5), 2.1)
    is_tol(wrap2(-10.9, -6.9), 2.9)
  }

  "Double.mod" should "work" in {
    is_tol(mod(0.0, 0.0), 0.0)
    is_tol(mod(0.0, 6.0), 0.0)
    is_tol(mod(0.0, 6.1), 0.0)
    is_tol(mod(0.0, 6.5), 0.0)
    is_tol(mod(0.0, 6.9), 0.0)
    is_tol(mod(0.0, -6.0), 0.0)
    is_tol(mod(0.0, -6.1), 0.0)
    is_tol(mod(0.0, -6.5), 0.0)
    is_tol(mod(0.0, -6.9), 0.0)
    is_tol(mod(10.0, 0.0), 0.0)
    is_tol(mod(10.0, 6.0), 4.0)
    is_tol(mod(10.0, 6.1), 3.9)
    is_tol(mod(10.0, 6.5), 3.5)
    is_tol(mod(10.0, 6.9), 3.1)
    is_tol(mod(10.0, -6.0), -2.0)
    is_tol(mod(10.0, -6.1), -2.2)
    is_tol(mod(10.0, -6.5), -3.0)
    is_tol(mod(10.0, -6.9), -3.8)
    is_tol(mod(10.1, 0.0), 0.0)
    is_tol(mod(10.1, 6.0), 4.1)
    is_tol(mod(10.1, 6.1), 4.0)
    is_tol(mod(10.1, 6.5), 3.6)
    is_tol(mod(10.1, 6.9), 3.2)
    is_tol(mod(10.1, -6.0), -1.9)
    is_tol(mod(10.1, -6.1), -2.1)
    is_tol(mod(10.1, -6.5), -2.9)
    is_tol(mod(10.1, -6.9), -3.7)
    is_tol(mod(10.5, 0.0), 0.0)
    is_tol(mod(10.5, 6.0), 4.5)
    is_tol(mod(10.5, 6.1), 4.4)
    is_tol(mod(10.5, 6.5), 4.0)
    is_tol(mod(10.5, 6.9), 3.6)
    is_tol(mod(10.5, -6.0), -1.5)
    is_tol(mod(10.5, -6.1), -1.7)
    is_tol(mod(10.5, -6.5), -2.5)
    is_tol(mod(10.5, -6.9), -3.3)
    is_tol(mod(10.9, 0.0), 0.0)
    is_tol(mod(10.9, 6.0), 4.9)
    is_tol(mod(10.9, 6.1), 4.8)
    is_tol(mod(10.9, 6.5), 4.4)
    is_tol(mod(10.9, 6.9), 4.0)
    is_tol(mod(10.9, -6.0), -1.1)
    is_tol(mod(10.9, -6.1), -1.3)
    is_tol(mod(10.9, -6.5), -2.1)
    is_tol(mod(10.9, -6.9), -2.9)
    is_tol(mod(-10.0, 0.0), 0.0)
    is_tol(mod(-10.0, 6.0), 2.0)
    is_tol(mod(-10.0, 6.1), 2.2)
    is_tol(mod(-10.0, 6.5), 3.0)
    is_tol(mod(-10.0, 6.9), 3.8)
    is_tol(mod(-10.0, -6.0), -4.0)
    is_tol(mod(-10.0, -6.1), -3.9)
    is_tol(mod(-10.0, -6.5), -3.5)
    is_tol(mod(-10.0, -6.9), -3.1)
    is_tol(mod(-10.1, 0.0), 0.0)
    is_tol(mod(-10.1, 6.0), 1.9)
    is_tol(mod(-10.1, 6.1), 2.1)
    is_tol(mod(-10.1, 6.5), 2.9)
    is_tol(mod(-10.1, 6.9), 3.7)
    is_tol(mod(-10.1, -6.0), -4.1)
    is_tol(mod(-10.1, -6.1), -4.0)
    is_tol(mod(-10.1, -6.5), -3.6)
    is_tol(mod(-10.1, -6.9), -3.2)
    is_tol(mod(-10.5, 0.0), 0.0)
    is_tol(mod(-10.5, 6.0), 1.5)
    is_tol(mod(-10.5, 6.1), 1.7)
    is_tol(mod(-10.5, 6.5), 2.5)
    is_tol(mod(-10.5, 6.9), 3.3)
    is_tol(mod(-10.5, -6.0), -4.5)
    is_tol(mod(-10.5, -6.1), -4.4)
    is_tol(mod(-10.5, -6.5), -4.0)
    is_tol(mod(-10.5, -6.9), -3.6)
    is_tol(mod(-10.9, 0.0), 0.0)
    is_tol(mod(-10.9, 6.0), 1.1)
    is_tol(mod(-10.9, 6.1), 1.3)
    is_tol(mod(-10.9, 6.5), 2.1)
    is_tol(mod(-10.9, 6.9), 2.9)
    is_tol(mod(-10.9, -6.0), -4.9)
    is_tol(mod(-10.9, -6.1), -4.8)
    is_tol(mod(-10.9, -6.5), -4.4)
    is_tol(mod(-10.9, -6.9), -4.0)
  }

  "Double.ring1" should "work" in {
    is_tol(ring1(0.0, 0.0), 0.0)
    is_tol(ring1(0.0, 6.0), 0.0)
    is_tol(ring1(0.0, 6.1), 0.0)
    is_tol(ring1(0.0, 6.5), 0.0)
    is_tol(ring1(0.0, 6.9), 0.0)
    is_tol(ring1(0.0, -6.0), 0.0)
    is_tol(ring1(0.0, -6.1), 0.0)
    is_tol(ring1(0.0, -6.5), 0.0)
    is_tol(ring1(0.0, -6.9), 0.0)
    is_tol(ring1(10.0, 0.0), 10.0)
    is_tol(ring1(10.0, 6.0), 70.0)
    is_tol(ring1(10.0, 6.1), 71.0)
    is_tol(ring1(10.0, 6.5), 75.0)
    is_tol(ring1(10.0, 6.9), 79.0)
    is_tol(ring1(10.0, -6.0), -50.0)
    is_tol(ring1(10.0, -6.1), -51.0)
    is_tol(ring1(10.0, -6.5), -55.0)
    is_tol(ring1(10.0, -6.9), -59.0)
    is_tol(ring1(10.1, 0.0), 10.1)
    is_tol(ring1(10.1, 6.0), 70.7)
    is_tol(ring1(10.1, 6.1), 71.71)
    is_tol(ring1(10.1, 6.5), 75.75)
    is_tol(ring1(10.1, 6.9), 79.79)
    is_tol(ring1(10.1, -6.0), -50.5)
    is_tol(ring1(10.1, -6.1), -51.51)
    is_tol(ring1(10.1, -6.5), -55.55)
    is_tol(ring1(10.1, -6.9), -59.59)
    is_tol(ring1(10.5, 0.0), 10.5)
    is_tol(ring1(10.5, 6.0), 73.5)
    is_tol(ring1(10.5, 6.1), 74.55)
    is_tol(ring1(10.5, 6.5), 78.75)
    is_tol(ring1(10.5, 6.9), 82.95)
    is_tol(ring1(10.5, -6.0), -52.5)
    is_tol(ring1(10.5, -6.1), -53.55)
    is_tol(ring1(10.5, -6.5), -57.75)
    is_tol(ring1(10.5, -6.9), -61.95)
    is_tol(ring1(10.9, 0.0), 10.9)
    is_tol(ring1(10.9, 6.0), 76.3)
    is_tol(ring1(10.9, 6.1), 77.39)
    is_tol(ring1(10.9, 6.5), 81.75)
    is_tol(ring1(10.9, 6.9), 86.11)
    is_tol(ring1(10.9, -6.0), -54.5)
    is_tol(ring1(10.9, -6.1), -55.59)
    is_tol(ring1(10.9, -6.5), -59.95)
    is_tol(ring1(10.9, -6.9), -64.31)
    is_tol(ring1(-10.0, 0.0), -10.0)
    is_tol(ring1(-10.0, 6.0), -70.0)
    is_tol(ring1(-10.0, 6.1), -71.0)
    is_tol(ring1(-10.0, 6.5), -75.0)
    is_tol(ring1(-10.0, 6.9), -79.0)
    is_tol(ring1(-10.0, -6.0), 50.0)
    is_tol(ring1(-10.0, -6.1), 51.0)
    is_tol(ring1(-10.0, -6.5), 55.0)
    is_tol(ring1(-10.0, -6.9), 59.0)
    is_tol(ring1(-10.1, 0.0), -10.1)
    is_tol(ring1(-10.1, 6.0), -70.7)
    is_tol(ring1(-10.1, 6.1), -71.71)
    is_tol(ring1(-10.1, 6.5), -75.75)
    is_tol(ring1(-10.1, 6.9), -79.79)
    is_tol(ring1(-10.1, -6.0), 50.5)
    is_tol(ring1(-10.1, -6.1), 51.51)
    is_tol(ring1(-10.1, -6.5), 55.55)
    is_tol(ring1(-10.1, -6.9), 59.59)
    is_tol(ring1(-10.5, 0.0), -10.5)
    is_tol(ring1(-10.5, 6.0), -73.5)
    is_tol(ring1(-10.5, 6.1), -74.55)
    is_tol(ring1(-10.5, 6.5), -78.75)
    is_tol(ring1(-10.5, 6.9), -82.95)
    is_tol(ring1(-10.5, -6.0), 52.5)
    is_tol(ring1(-10.5, -6.1), 53.55)
    is_tol(ring1(-10.5, -6.5), 57.75)
    is_tol(ring1(-10.5, -6.9), 61.95)
    is_tol(ring1(-10.9, 0.0), -10.9)
    is_tol(ring1(-10.9, 6.0), -76.3)
    is_tol(ring1(-10.9, 6.1), -77.39)
    is_tol(ring1(-10.9, 6.5), -81.75)
    is_tol(ring1(-10.9, 6.9), -86.11)
    is_tol(ring1(-10.9, -6.0), 54.5)
    is_tol(ring1(-10.9, -6.1), 55.59)
    is_tol(ring1(-10.9, -6.5), 59.95)
    is_tol(ring1(-10.9, -6.9), 64.31)
  }

  "Double.ring2" should "work" in {
    is_tol(ring2(0.0, 0.0), 0.0)
    is_tol(ring2(0.0, 6.0), 6.0)
    is_tol(ring2(0.0, 6.1), 6.1)
    is_tol(ring2(0.0, 6.5), 6.5)
    is_tol(ring2(0.0, 6.9), 6.9)
    is_tol(ring2(0.0, -6.0), -6.0)
    is_tol(ring2(0.0, -6.1), -6.1)
    is_tol(ring2(0.0, -6.5), -6.5)
    is_tol(ring2(0.0, -6.9), -6.9)
    is_tol(ring2(10.0, 0.0), 10.0)
    is_tol(ring2(10.0, 6.0), 76.0)
    is_tol(ring2(10.0, 6.1), 77.1)
    is_tol(ring2(10.0, 6.5), 81.5)
    is_tol(ring2(10.0, 6.9), 85.9)
    is_tol(ring2(10.0, -6.0), -56.0)
    is_tol(ring2(10.0, -6.1), -57.1)
    is_tol(ring2(10.0, -6.5), -61.5)
    is_tol(ring2(10.0, -6.9), -65.9)
    is_tol(ring2(10.1, 0.0), 10.1)
    is_tol(ring2(10.1, 6.0), 76.7)
    is_tol(ring2(10.1, 6.1), 77.81)
    is_tol(ring2(10.1, 6.5), 82.25)
    is_tol(ring2(10.1, 6.9), 86.69)
    is_tol(ring2(10.1, -6.0), -56.5)
    is_tol(ring2(10.1, -6.1), -57.61)
    is_tol(ring2(10.1, -6.5), -62.05)
    is_tol(ring2(10.1, -6.9), -66.49)
    is_tol(ring2(10.5, 0.0), 10.5)
    is_tol(ring2(10.5, 6.0), 79.5)
    is_tol(ring2(10.5, 6.1), 80.65)
    is_tol(ring2(10.5, 6.5), 85.25)
    is_tol(ring2(10.5, 6.9), 89.85)
    is_tol(ring2(10.5, -6.0), -58.5)
    is_tol(ring2(10.5, -6.1), -59.65)
    is_tol(ring2(10.5, -6.5), -64.25)
    is_tol(ring2(10.5, -6.9), -68.85)
    is_tol(ring2(10.9, 0.0), 10.9)
    is_tol(ring2(10.9, 6.0), 82.3)
    is_tol(ring2(10.9, 6.1), 83.49)
    is_tol(ring2(10.9, 6.5), 88.25)
    is_tol(ring2(10.9, 6.9), 93.01)
    is_tol(ring2(10.9, -6.0), -60.5)
    is_tol(ring2(10.9, -6.1), -61.69)
    is_tol(ring2(10.9, -6.5), -66.45)
    is_tol(ring2(10.9, -6.9), -71.21)
    is_tol(ring2(-10.0, 0.0), -10.0)
    is_tol(ring2(-10.0, 6.0), -64.0)
    is_tol(ring2(-10.0, 6.1), -64.9)
    is_tol(ring2(-10.0, 6.5), -68.5)
    is_tol(ring2(-10.0, 6.9), -72.1)
    is_tol(ring2(-10.0, -6.0), 44.0)
    is_tol(ring2(-10.0, -6.1), 44.9)
    is_tol(ring2(-10.0, -6.5), 48.5)
    is_tol(ring2(-10.0, -6.9), 52.1)
    is_tol(ring2(-10.1, 0.0), -10.1)
    is_tol(ring2(-10.1, 6.0), -64.7)
    is_tol(ring2(-10.1, 6.1), -65.61)
    is_tol(ring2(-10.1, 6.5), -69.25)
    is_tol(ring2(-10.1, 6.9), -72.89)
    is_tol(ring2(-10.1, -6.0), 44.5)
    is_tol(ring2(-10.1, -6.1), 45.41)
    is_tol(ring2(-10.1, -6.5), 49.05)
    is_tol(ring2(-10.1, -6.9), 52.69)
    is_tol(ring2(-10.5, 0.0), -10.5)
    is_tol(ring2(-10.5, 6.0), -67.5)
    is_tol(ring2(-10.5, 6.1), -68.45)
    is_tol(ring2(-10.5, 6.5), -72.25)
    is_tol(ring2(-10.5, 6.9), -76.05)
    is_tol(ring2(-10.5, -6.0), 46.5)
    is_tol(ring2(-10.5, -6.1), 47.45)
    is_tol(ring2(-10.5, -6.5), 51.25)
    is_tol(ring2(-10.5, -6.9), 55.05)
    is_tol(ring2(-10.9, 0.0), -10.9)
    is_tol(ring2(-10.9, 6.0), -70.3)
    is_tol(ring2(-10.9, 6.1), -71.29)
    is_tol(ring2(-10.9, 6.5), -75.25)
    is_tol(ring2(-10.9, 6.9), -79.21)
    is_tol(ring2(-10.9, -6.0), 48.5)
    is_tol(ring2(-10.9, -6.1), 49.49)
    is_tol(ring2(-10.9, -6.5), 53.45)
    is_tol(ring2(-10.9, -6.9), 57.41)
  }

  "Double.ring3" should "work" in {
    is_tol(ring3(0.0, 0.0), 0.0)
    is_tol(ring3(0.0, 6.0), 0.0)
    is_tol(ring3(0.0, 6.1), 0.0)
    is_tol(ring3(0.0, 6.5), 0.0)
    is_tol(ring3(0.0, 6.9), 0.0)
    is_tol(ring3(0.0, -6.0), -0.0)
    is_tol(ring3(0.0, -6.1), -0.0)
    is_tol(ring3(0.0, -6.5), -0.0)
    is_tol(ring3(0.0, -6.9), -0.0)
    is_tol(ring3(10.0, 0.0), 0.0)
    is_tol(ring3(10.0, 6.0), 600.0)
    is_tol(ring3(10.0, 6.1), 610.0)
    is_tol(ring3(10.0, 6.5), 650.0)
    is_tol(ring3(10.0, 6.9), 690.0)
    is_tol(ring3(10.0, -6.0), -600.0)
    is_tol(ring3(10.0, -6.1), -610.0)
    is_tol(ring3(10.0, -6.5), -650.0)
    is_tol(ring3(10.0, -6.9), -690.0)
    is_tol(ring3(10.1, 0.0), 0.0)
    is_tol(ring3(10.1, 6.0), 612.06)
    is_tol(ring3(10.1, 6.1), 622.261)
    is_tol(ring3(10.1, 6.5), 663.065)
    is_tol(ring3(10.1, 6.9), 703.869)
    is_tol(ring3(10.1, -6.0), -612.06)
    is_tol(ring3(10.1, -6.1), -622.261)
    is_tol(ring3(10.1, -6.5), -663.065)
    is_tol(ring3(10.1, -6.9), -703.869)
    is_tol(ring3(10.5, 0.0), 0.0)
    is_tol(ring3(10.5, 6.0), 661.5)
    is_tol(ring3(10.5, 6.1), 672.525)
    is_tol(ring3(10.5, 6.5), 716.625)
    is_tol(ring3(10.5, 6.9), 760.725)
    is_tol(ring3(10.5, -6.0), -661.5)
    is_tol(ring3(10.5, -6.1), -672.525)
    is_tol(ring3(10.5, -6.5), -716.625)
    is_tol(ring3(10.5, -6.9), -760.725)
    is_tol(ring3(10.9, 0.0), 0.0)
    is_tol(ring3(10.9, 6.0), 712.86)
    is_tol(ring3(10.9, 6.1), 724.741)
    is_tol(ring3(10.9, 6.5), 772.265)
    is_tol(ring3(10.9, 6.9), 819.789)
    is_tol(ring3(10.9, -6.0), -712.86)
    is_tol(ring3(10.9, -6.1), -724.741)
    is_tol(ring3(10.9, -6.5), -772.265)
    is_tol(ring3(10.9, -6.9), -819.789)
    is_tol(ring3(-10.0, 0.0), 0.0)
    is_tol(ring3(-10.0, 6.0), 600.0)
    is_tol(ring3(-10.0, 6.1), 610.0)
    is_tol(ring3(-10.0, 6.5), 650.0)
    is_tol(ring3(-10.0, 6.9), 690.0)
    is_tol(ring3(-10.0, -6.0), -600.0)
    is_tol(ring3(-10.0, -6.1), -610.0)
    is_tol(ring3(-10.0, -6.5), -650.0)
    is_tol(ring3(-10.0, -6.9), -690.0)
    is_tol(ring3(-10.1, 0.0), 0.0)
    is_tol(ring3(-10.1, 6.0), 612.06)
    is_tol(ring3(-10.1, 6.1), 622.261)
    is_tol(ring3(-10.1, 6.5), 663.065)
    is_tol(ring3(-10.1, 6.9), 703.869)
    is_tol(ring3(-10.1, -6.0), -612.06)
    is_tol(ring3(-10.1, -6.1), -622.261)
    is_tol(ring3(-10.1, -6.5), -663.065)
    is_tol(ring3(-10.1, -6.9), -703.869)
    is_tol(ring3(-10.5, 0.0), 0.0)
    is_tol(ring3(-10.5, 6.0), 661.5)
    is_tol(ring3(-10.5, 6.1), 672.525)
    is_tol(ring3(-10.5, 6.5), 716.625)
    is_tol(ring3(-10.5, 6.9), 760.725)
    is_tol(ring3(-10.5, -6.0), -661.5)
    is_tol(ring3(-10.5, -6.1), -672.525)
    is_tol(ring3(-10.5, -6.5), -716.625)
    is_tol(ring3(-10.5, -6.9), -760.725)
    is_tol(ring3(-10.9, 0.0), 0.0)
    is_tol(ring3(-10.9, 6.0), 712.86)
    is_tol(ring3(-10.9, 6.1), 724.741)
    is_tol(ring3(-10.9, 6.5), 772.265)
    is_tol(ring3(-10.9, 6.9), 819.789)
    is_tol(ring3(-10.9, -6.0), -712.86)
    is_tol(ring3(-10.9, -6.1), -724.741)
    is_tol(ring3(-10.9, -6.5), -772.265)
    is_tol(ring3(-10.9, -6.9), -819.789)
  }

  "Double.ring4" should "work" in {
    is_tol(ring4(0.0, 0.0), 0.0)
    is_tol(ring4(0.0, 6.0), -0.0)
    is_tol(ring4(0.0, 6.1), -0.0)
    is_tol(ring4(0.0, 6.5), -0.0)
    is_tol(ring4(0.0, 6.9), -0.0)
    is_tol(ring4(0.0, -6.0), -0.0)
    is_tol(ring4(0.0, -6.1), -0.0)
    is_tol(ring4(0.0, -6.5), -0.0)
    is_tol(ring4(0.0, -6.9), -0.0)
    is_tol(ring4(10.0, 0.0), 0.0)
    is_tol(ring4(10.0, 6.0), 240.0)
    is_tol(ring4(10.0, 6.1), 237.9)
    is_tol(ring4(10.0, 6.5), 227.5)
    is_tol(ring4(10.0, 6.9), 213.9)
    is_tol(ring4(10.0, -6.0), -960.0)
    is_tol(ring4(10.0, -6.1), -982.1)
    is_tol(ring4(10.0, -6.5), -1072.5)
    is_tol(ring4(10.0, -6.9), -1166.1)
    is_tol(ring4(10.1, 0.0), 0.0)
    is_tol(ring4(10.1, 6.0), 248.46)
    is_tol(ring4(10.1, 6.1), 246.44)
    is_tol(ring4(10.1, 6.5), 236.34)
    is_tol(ring4(10.1, 6.9), 223.008)
    is_tol(ring4(10.1, -6.0), -975.66)
    is_tol(ring4(10.1, -6.1), -998.082)
    is_tol(ring4(10.1, -6.5), -1089.79)
    is_tol(ring4(10.1, -6.9), -1184.73)
    is_tol(ring4(10.5, 0.0), 0.0)
    is_tol(ring4(10.5, 6.0), 283.5)
    is_tol(ring4(10.5, 6.1), 281.82)
    is_tol(ring4(10.5, 6.5), 273.0)
    is_tol(ring4(10.5, 6.9), 260.82)
    is_tol(ring4(10.5, -6.0), -1039.5)
    is_tol(ring4(10.5, -6.1), -1063.23)
    is_tol(ring4(10.5, -6.5), -1160.25)
    is_tol(ring4(10.5, -6.9), -1260.63)
    is_tol(ring4(10.9, 0.0), 0.0)
    is_tol(ring4(10.9, 6.0), 320.46)
    is_tol(ring4(10.9, 6.1), 319.152)
    is_tol(ring4(10.9, 6.5), 311.74)
    is_tol(ring4(10.9, 6.9), 300.84)
    is_tol(ring4(10.9, -6.0), -1105.26)
    is_tol(ring4(10.9, -6.1), -1130.33)
    is_tol(ring4(10.9, -6.5), -1232.79)
    is_tol(ring4(10.9, -6.9), -1338.738)
    is_tol(ring4(-10.0, 0.0), 0.0)
    is_tol(ring4(-10.0, 6.0), 960.0)
    is_tol(ring4(-10.0, 6.1), 982.1)
    is_tol(ring4(-10.0, 6.5), 1072.5)
    is_tol(ring4(-10.0, 6.9), 1166.1)
    is_tol(ring4(-10.0, -6.0), -240.0)
    is_tol(ring4(-10.0, -6.1), -237.9)
    is_tol(ring4(-10.0, -6.5), -227.5)
    is_tol(ring4(-10.0, -6.9), -213.9)
    is_tol(ring4(-10.1, 0.0), 0.0)
    is_tol(ring4(-10.1, 6.0), 975.66)
    is_tol(ring4(-10.1, 6.1), 998.082)
    is_tol(ring4(-10.1, 6.5), 1089.79)
    is_tol(ring4(-10.1, 6.9), 1184.73)
    is_tol(ring4(-10.1, -6.0), -248.46)
    is_tol(ring4(-10.1, -6.1), -246.44)
    is_tol(ring4(-10.1, -6.5), -236.34)
    is_tol(ring4(-10.1, -6.9), -223.008)
    is_tol(ring4(-10.5, 0.0), 0.0)
    is_tol(ring4(-10.5, 6.0), 1039.5)
    is_tol(ring4(-10.5, 6.1), 1063.23)
    is_tol(ring4(-10.5, 6.5), 1160.25)
    is_tol(ring4(-10.5, 6.9), 1260.63)
    is_tol(ring4(-10.5, -6.0), -283.5)
    is_tol(ring4(-10.5, -6.1), -281.82)
    is_tol(ring4(-10.5, -6.5), -273.0)
    is_tol(ring4(-10.5, -6.9), -260.82)
    is_tol(ring4(-10.9, 0.0), 0.0)
    is_tol(ring4(-10.9, 6.0), 1105.26)
    is_tol(ring4(-10.9, 6.1), 1130.33)
    is_tol(ring4(-10.9, 6.5), 1232.79)
    is_tol(ring4(-10.9, 6.9), 1338.738)
    is_tol(ring4(-10.9, -6.0), -320.46)
    is_tol(ring4(-10.9, -6.1), -319.152)
    is_tol(ring4(-10.9, -6.5), -311.74)
    is_tol(ring4(-10.9, -6.9), -300.84)
  }

  "Double.thresh" should "work" in {
    is_tol(thresh(0.0, 0.0), 0.0)
    is_tol(thresh(0.0, 6.0), 0.0)
    is_tol(thresh(0.0, 6.1), 0.0)
    is_tol(thresh(0.0, 6.5), 0.0)
    is_tol(thresh(0.0, 6.9), 0.0)
    is_tol(thresh(0.0, -6.0), 0.0)
    is_tol(thresh(0.0, -6.1), 0.0)
    is_tol(thresh(0.0, -6.5), 0.0)
    is_tol(thresh(0.0, -6.9), 0.0)
    is_tol(thresh(10.0, 0.0), 10.0)
    is_tol(thresh(10.0, 6.0), 10.0)
    is_tol(thresh(10.0, 6.1), 10.0)
    is_tol(thresh(10.0, 6.5), 10.0)
    is_tol(thresh(10.0, 6.9), 10.0)
    is_tol(thresh(10.0, -6.0), 10.0)
    is_tol(thresh(10.0, -6.1), 10.0)
    is_tol(thresh(10.0, -6.5), 10.0)
    is_tol(thresh(10.0, -6.9), 10.0)
    is_tol(thresh(10.1, 0.0), 10.1)
    is_tol(thresh(10.1, 6.0), 10.1)
    is_tol(thresh(10.1, 6.1), 10.1)
    is_tol(thresh(10.1, 6.5), 10.1)
    is_tol(thresh(10.1, 6.9), 10.1)
    is_tol(thresh(10.1, -6.0), 10.1)
    is_tol(thresh(10.1, -6.1), 10.1)
    is_tol(thresh(10.1, -6.5), 10.1)
    is_tol(thresh(10.1, -6.9), 10.1)
    is_tol(thresh(10.5, 0.0), 10.5)
    is_tol(thresh(10.5, 6.0), 10.5)
    is_tol(thresh(10.5, 6.1), 10.5)
    is_tol(thresh(10.5, 6.5), 10.5)
    is_tol(thresh(10.5, 6.9), 10.5)
    is_tol(thresh(10.5, -6.0), 10.5)
    is_tol(thresh(10.5, -6.1), 10.5)
    is_tol(thresh(10.5, -6.5), 10.5)
    is_tol(thresh(10.5, -6.9), 10.5)
    is_tol(thresh(10.9, 0.0), 10.9)
    is_tol(thresh(10.9, 6.0), 10.9)
    is_tol(thresh(10.9, 6.1), 10.9)
    is_tol(thresh(10.9, 6.5), 10.9)
    is_tol(thresh(10.9, 6.9), 10.9)
    is_tol(thresh(10.9, -6.0), 10.9)
    is_tol(thresh(10.9, -6.1), 10.9)
    is_tol(thresh(10.9, -6.5), 10.9)
    is_tol(thresh(10.9, -6.9), 10.9)
    is_tol(thresh(-10.0, 0.0), 0.0)
    is_tol(thresh(-10.0, 6.0), 0.0)
    is_tol(thresh(-10.0, 6.1), 0.0)
    is_tol(thresh(-10.0, 6.5), 0.0)
    is_tol(thresh(-10.0, 6.9), 0.0)
    is_tol(thresh(-10.0, -6.0), 0.0)
    is_tol(thresh(-10.0, -6.1), 0.0)
    is_tol(thresh(-10.0, -6.5), 0.0)
    is_tol(thresh(-10.0, -6.9), 0.0)
    is_tol(thresh(-10.1, 0.0), 0.0)
    is_tol(thresh(-10.1, 6.0), 0.0)
    is_tol(thresh(-10.1, 6.1), 0.0)
    is_tol(thresh(-10.1, 6.5), 0.0)
    is_tol(thresh(-10.1, 6.9), 0.0)
    is_tol(thresh(-10.1, -6.0), 0.0)
    is_tol(thresh(-10.1, -6.1), 0.0)
    is_tol(thresh(-10.1, -6.5), 0.0)
    is_tol(thresh(-10.1, -6.9), 0.0)
    is_tol(thresh(-10.5, 0.0), 0.0)
    is_tol(thresh(-10.5, 6.0), 0.0)
    is_tol(thresh(-10.5, 6.1), 0.0)
    is_tol(thresh(-10.5, 6.5), 0.0)
    is_tol(thresh(-10.5, 6.9), 0.0)
    is_tol(thresh(-10.5, -6.0), 0.0)
    is_tol(thresh(-10.5, -6.1), 0.0)
    is_tol(thresh(-10.5, -6.5), 0.0)
    is_tol(thresh(-10.5, -6.9), 0.0)
    is_tol(thresh(-10.9, 0.0), 0.0)
    is_tol(thresh(-10.9, 6.0), 0.0)
    is_tol(thresh(-10.9, 6.1), 0.0)
    is_tol(thresh(-10.9, 6.5), 0.0)
    is_tol(thresh(-10.9, 6.9), 0.0)
    is_tol(thresh(-10.9, -6.0), 0.0)
    is_tol(thresh(-10.9, -6.1), 0.0)
    is_tol(thresh(-10.9, -6.5), 0.0)
    is_tol(thresh(-10.9, -6.9), 0.0)
  }

  "Double.amclip" should "work" in {
    is_tol(amClip(0.0, 0.0), 0.0)
    is_tol(amClip(0.0, 6.0), 0.0)
    is_tol(amClip(0.0, 6.1), 0.0)
    is_tol(amClip(0.0, 6.5), 0.0)
    is_tol(amClip(0.0, 6.9), 0.0)
    is_tol(amClip(0.0, -6.0), 0.0)
    is_tol(amClip(0.0, -6.1), 0.0)
    is_tol(amClip(0.0, -6.5), 0.0)
    is_tol(amClip(0.0, -6.9), 0.0)
    is_tol(amClip(10.0, 0.0), 0.0)
    is_tol(amClip(10.0, 6.0), 60.0)
    is_tol(amClip(10.0, 6.1), 61.0)
    is_tol(amClip(10.0, 6.5), 65.0)
    is_tol(amClip(10.0, 6.9), 69.0)
    is_tol(amClip(10.0, -6.0), 0.0)
    is_tol(amClip(10.0, -6.1), 0.0)
    is_tol(amClip(10.0, -6.5), 0.0)
    is_tol(amClip(10.0, -6.9), 0.0)
    is_tol(amClip(10.1, 0.0), 0.0)
    is_tol(amClip(10.1, 6.0), 60.6)
    is_tol(amClip(10.1, 6.1), 61.61)
    is_tol(amClip(10.1, 6.5), 65.65)
    is_tol(amClip(10.1, 6.9), 69.69)
    is_tol(amClip(10.1, -6.0), 0.0)
    is_tol(amClip(10.1, -6.1), 0.0)
    is_tol(amClip(10.1, -6.5), 0.0)
    is_tol(amClip(10.1, -6.9), 0.0)
    is_tol(amClip(10.5, 0.0), 0.0)
    is_tol(amClip(10.5, 6.0), 63.0)
    is_tol(amClip(10.5, 6.1), 64.05)
    is_tol(amClip(10.5, 6.5), 68.25)
    is_tol(amClip(10.5, 6.9), 72.45)
    is_tol(amClip(10.5, -6.0), 0.0)
    is_tol(amClip(10.5, -6.1), 0.0)
    is_tol(amClip(10.5, -6.5), 0.0)
    is_tol(amClip(10.5, -6.9), 0.0)
    is_tol(amClip(10.9, 0.0), 0.0)
    is_tol(amClip(10.9, 6.0), 65.4)
    is_tol(amClip(10.9, 6.1), 66.49)
    is_tol(amClip(10.9, 6.5), 70.85)
    is_tol(amClip(10.9, 6.9), 75.21)
    is_tol(amClip(10.9, -6.0), 0.0)
    is_tol(amClip(10.9, -6.1), 0.0)
    is_tol(amClip(10.9, -6.5), 0.0)
    is_tol(amClip(10.9, -6.9), 0.0)
    is_tol(amClip(-10.0, 0.0), -0.0)
    is_tol(amClip(-10.0, 6.0), -60.0)
    is_tol(amClip(-10.0, 6.1), -61.0)
    is_tol(amClip(-10.0, 6.5), -65.0)
    is_tol(amClip(-10.0, 6.9), -69.0)
    is_tol(amClip(-10.0, -6.0), -0.0)
    is_tol(amClip(-10.0, -6.1), -0.0)
    is_tol(amClip(-10.0, -6.5), -0.0)
    is_tol(amClip(-10.0, -6.9), -0.0)
    is_tol(amClip(-10.1, 0.0), -0.0)
    is_tol(amClip(-10.1, 6.0), -60.6)
    is_tol(amClip(-10.1, 6.1), -61.61)
    is_tol(amClip(-10.1, 6.5), -65.65)
    is_tol(amClip(-10.1, 6.9), -69.69)
    is_tol(amClip(-10.1, -6.0), -0.0)
    is_tol(amClip(-10.1, -6.1), -0.0)
    is_tol(amClip(-10.1, -6.5), -0.0)
    is_tol(amClip(-10.1, -6.9), -0.0)
    is_tol(amClip(-10.5, 0.0), -0.0)
    is_tol(amClip(-10.5, 6.0), -63.0)
    is_tol(amClip(-10.5, 6.1), -64.05)
    is_tol(amClip(-10.5, 6.5), -68.25)
    is_tol(amClip(-10.5, 6.9), -72.45)
    is_tol(amClip(-10.5, -6.0), -0.0)
    is_tol(amClip(-10.5, -6.1), -0.0)
    is_tol(amClip(-10.5, -6.5), -0.0)
    is_tol(amClip(-10.5, -6.9), -0.0)
    is_tol(amClip(-10.9, 0.0), -0.0)
    is_tol(amClip(-10.9, 6.0), -65.4)
    is_tol(amClip(-10.9, 6.1), -66.49)
    is_tol(amClip(-10.9, 6.5), -70.85)
    is_tol(amClip(-10.9, 6.9), -75.21)
    is_tol(amClip(-10.9, -6.0), -0.0)
    is_tol(amClip(-10.9, -6.1), -0.0)
    is_tol(amClip(-10.9, -6.5), -0.0)
    is_tol(amClip(-10.9, -6.9), -0.0)
  }

  "Double.scaleneg" should "work" in {
    is_tol(scaleNeg(0.0, 0.0), 0.0)
    is_tol(scaleNeg(0.0, 6.0), 0.0)
    is_tol(scaleNeg(0.0, 6.1), 0.0)
    is_tol(scaleNeg(0.0, 6.5), 0.0)
    is_tol(scaleNeg(0.0, 6.9), 0.0)
    is_tol(scaleNeg(0.0, -6.0), 0.0)
    is_tol(scaleNeg(0.0, -6.1), 0.0)
    is_tol(scaleNeg(0.0, -6.5), 0.0)
    is_tol(scaleNeg(0.0, -6.9), 0.0)
    is_tol(scaleNeg(10.0, 0.0), 10.0)
    is_tol(scaleNeg(10.0, 6.0), 10.0)
    is_tol(scaleNeg(10.0, 6.1), 10.0)
    is_tol(scaleNeg(10.0, 6.5), 10.0)
    is_tol(scaleNeg(10.0, 6.9), 10.0)
    is_tol(scaleNeg(10.0, -6.0), 10.0)
    is_tol(scaleNeg(10.0, -6.1), 10.0)
    is_tol(scaleNeg(10.0, -6.5), 10.0)
    is_tol(scaleNeg(10.0, -6.9), 10.0)
    is_tol(scaleNeg(10.1, 0.0), 10.1)
    is_tol(scaleNeg(10.1, 6.0), 10.1)
    is_tol(scaleNeg(10.1, 6.1), 10.1)
    is_tol(scaleNeg(10.1, 6.5), 10.1)
    is_tol(scaleNeg(10.1, 6.9), 10.1)
    is_tol(scaleNeg(10.1, -6.0), 10.1)
    is_tol(scaleNeg(10.1, -6.1), 10.1)
    is_tol(scaleNeg(10.1, -6.5), 10.1)
    is_tol(scaleNeg(10.1, -6.9), 10.1)
    is_tol(scaleNeg(10.5, 0.0), 10.5)
    is_tol(scaleNeg(10.5, 6.0), 10.5)
    is_tol(scaleNeg(10.5, 6.1), 10.5)
    is_tol(scaleNeg(10.5, 6.5), 10.5)
    is_tol(scaleNeg(10.5, 6.9), 10.5)
    is_tol(scaleNeg(10.5, -6.0), 10.5)
    is_tol(scaleNeg(10.5, -6.1), 10.5)
    is_tol(scaleNeg(10.5, -6.5), 10.5)
    is_tol(scaleNeg(10.5, -6.9), 10.5)
    is_tol(scaleNeg(10.9, 0.0), 10.9)
    is_tol(scaleNeg(10.9, 6.0), 10.9)
    is_tol(scaleNeg(10.9, 6.1), 10.9)
    is_tol(scaleNeg(10.9, 6.5), 10.9)
    is_tol(scaleNeg(10.9, 6.9), 10.9)
    is_tol(scaleNeg(10.9, -6.0), 10.9)
    is_tol(scaleNeg(10.9, -6.1), 10.9)
    is_tol(scaleNeg(10.9, -6.5), 10.9)
    is_tol(scaleNeg(10.9, -6.9), 10.9)
    is_tol(scaleNeg(-10.0, 0.0), 0.0)
    is_tol(scaleNeg(-10.0, 6.0), 60.0)
    is_tol(scaleNeg(-10.0, 6.1), 61.0)
    is_tol(scaleNeg(-10.0, 6.5), 65.0)
    is_tol(scaleNeg(-10.0, 6.9), 69.0)
    is_tol(scaleNeg(-10.0, -6.0), -60.0)
    is_tol(scaleNeg(-10.0, -6.1), -61.0)
    is_tol(scaleNeg(-10.0, -6.5), -65.0)
    is_tol(scaleNeg(-10.0, -6.9), -69.0)
    is_tol(scaleNeg(-10.1, 0.0), 0.0)
    is_tol(scaleNeg(-10.1, 6.0), 60.6)
    is_tol(scaleNeg(-10.1, 6.1), 61.61)
    is_tol(scaleNeg(-10.1, 6.5), 65.65)
    is_tol(scaleNeg(-10.1, 6.9), 69.69)
    is_tol(scaleNeg(-10.1, -6.0), -60.6)
    is_tol(scaleNeg(-10.1, -6.1), -61.61)
    is_tol(scaleNeg(-10.1, -6.5), -65.65)
    is_tol(scaleNeg(-10.1, -6.9), -69.69)
    is_tol(scaleNeg(-10.5, 0.0), 0.0)
    is_tol(scaleNeg(-10.5, 6.0), 63.0)
    is_tol(scaleNeg(-10.5, 6.1), 64.05)
    is_tol(scaleNeg(-10.5, 6.5), 68.25)
    is_tol(scaleNeg(-10.5, 6.9), 72.45)
    is_tol(scaleNeg(-10.5, -6.0), -63.0)
    is_tol(scaleNeg(-10.5, -6.1), -64.05)
    is_tol(scaleNeg(-10.5, -6.5), -68.25)
    is_tol(scaleNeg(-10.5, -6.9), -72.45)
    is_tol(scaleNeg(-10.9, 0.0), 0.0)
    is_tol(scaleNeg(-10.9, 6.0), 65.4)
    is_tol(scaleNeg(-10.9, 6.1), 66.49)
    is_tol(scaleNeg(-10.9, 6.5), 70.85)
    is_tol(scaleNeg(-10.9, 6.9), 75.21)
    is_tol(scaleNeg(-10.9, -6.0), -65.4)
    is_tol(scaleNeg(-10.9, -6.1), -66.49)
    is_tol(scaleNeg(-10.9, -6.5), -70.85)
    is_tol(scaleNeg(-10.9, -6.9), -75.21)
  }
}